(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/assets/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 415);
/******/ })
/************************************************************************/
/******/ ({

/***/ 15:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [module], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.browser = mod.exports;\n  }\n})(this, function (module) {\n  /* webextension-polyfill - v0.3.1 - Tue Aug 21 2018 10:09:34 */\n  /* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n  /* vim: set sts=2 sw=2 et tw=80: */\n  /* This Source Code Form is subject to the terms of the Mozilla Public\n   * License, v. 2.0. If a copy of the MPL was not distributed with this\n   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n  \"use strict\";\n\n  if (typeof browser === \"undefined\" || Object.getPrototypeOf(browser) !== Object.prototype) {\n    const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\";\n    const SEND_RESPONSE_DEPRECATION_WARNING = \"Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)\";\n\n    // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n    // optimization for Firefox. Since Spidermonkey does not fully parse the\n    // contents of a function until the first time it's called, and since it will\n    // never actually need to be called, this allows the polyfill to be included\n    // in Firefox nearly for free.\n    const wrapAPIs = () => {\n      // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n      // at build time by replacing the following \"include\" with the content of the\n      // JSON file.\n      const apiMetadata = {\n        \"alarms\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"clearAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"bookmarks\": {\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getChildren\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getRecent\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getSubTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTree\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"browserAction\": {\n          \"disable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"enable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"getBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"openPopup\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"browsingData\": {\n          \"remove\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"removeCache\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCookies\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeDownloads\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFormData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeHistory\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeLocalStorage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePasswords\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePluginData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"settings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"commands\": {\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"contextMenus\": {\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"cookies\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAllCookieStores\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"devtools\": {\n          \"inspectedWindow\": {\n            \"eval\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 2\n            }\n          },\n          \"panels\": {\n            \"create\": {\n              \"minArgs\": 3,\n              \"maxArgs\": 3,\n              \"singleCallbackArg\": true\n            }\n          }\n        },\n        \"downloads\": {\n          \"cancel\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"download\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"erase\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFileIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"open\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"pause\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFile\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"resume\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"extension\": {\n          \"isAllowedFileSchemeAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"isAllowedIncognitoAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"history\": {\n          \"addUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"deleteRange\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getVisits\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"i18n\": {\n          \"detectLanguage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAcceptLanguages\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"identity\": {\n          \"launchWebAuthFlow\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"idle\": {\n          \"queryState\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"management\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setEnabled\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"uninstallSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"notifications\": {\n          \"clear\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPermissionLevel\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"pageAction\": {\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"hide\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"permissions\": {\n          \"contains\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"request\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"runtime\": {\n          \"getBackgroundPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getBrowserInfo\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPlatformInfo\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"openOptionsPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"requestUpdateCheck\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"sendMessage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 3\n          },\n          \"sendNativeMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"setUninstallURL\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"sessions\": {\n          \"getDevices\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getRecentlyClosed\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"restore\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"storage\": {\n          \"local\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          },\n          \"managed\": {\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            }\n          },\n          \"sync\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        },\n        \"tabs\": {\n          \"captureVisibleTab\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"detectLanguage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"discard\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"duplicate\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"executeScript\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getZoom\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getZoomSettings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"highlight\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"insertCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"query\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"reload\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"sendMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 3\n          },\n          \"setZoom\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"setZoomSettings\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"update\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          }\n        },\n        \"topSites\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"webNavigation\": {\n          \"getAllFrames\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFrame\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"webRequest\": {\n          \"handlerBehaviorChanged\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"windows\": {\n          \"create\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getLastFocused\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        }\n      };\n\n      if (Object.keys(apiMetadata).length === 0) {\n        throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n      }\n\n      /**\n       * A WeakMap subclass which creates and stores a value for any key which does\n       * not exist when accessed, but behaves exactly as an ordinary WeakMap\n       * otherwise.\n       *\n       * @param {function} createItem\n       *        A function which will be called in order to create the value for any\n       *        key which does not exist, the first time it is accessed. The\n       *        function receives, as its only argument, the key being created.\n       */\n      class DefaultWeakMap extends WeakMap {\n        constructor(createItem, items = undefined) {\n          super(items);\n          this.createItem = createItem;\n        }\n\n        get(key) {\n          if (!this.has(key)) {\n            this.set(key, this.createItem(key));\n          }\n\n          return super.get(key);\n        }\n      }\n\n      /**\n       * Returns true if the given object is an object with a `then` method, and can\n       * therefore be assumed to behave as a Promise.\n       *\n       * @param {*} value The value to test.\n       * @returns {boolean} True if the value is thenable.\n       */\n      const isThenable = value => {\n        return value && typeof value === \"object\" && typeof value.then === \"function\";\n      };\n\n      /**\n       * Creates and returns a function which, when called, will resolve or reject\n       * the given promise based on how it is called:\n       *\n       * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n       *   the promise is rejected with that value.\n       * - If the function is called with exactly one argument, the promise is\n       *   resolved to that value.\n       * - Otherwise, the promise is resolved to an array containing all of the\n       *   function's arguments.\n       *\n       * @param {object} promise\n       *        An object containing the resolution and rejection functions of a\n       *        promise.\n       * @param {function} promise.resolve\n       *        The promise's resolution function.\n       * @param {function} promise.rejection\n       *        The promise's rejection function.\n       * @param {object} metadata\n       *        Metadata about the wrapped method which has created the callback.\n       * @param {integer} metadata.maxResolvedArgs\n       *        The maximum number of arguments which may be passed to the\n       *        callback created by the wrapped async function.\n       *\n       * @returns {function}\n       *        The generated callback function.\n       */\n      const makeCallback = (promise, metadata) => {\n        return (...callbackArgs) => {\n          if (chrome.runtime.lastError) {\n            promise.reject(chrome.runtime.lastError);\n          } else if (metadata.singleCallbackArg || callbackArgs.length <= 1) {\n            promise.resolve(callbackArgs[0]);\n          } else {\n            promise.resolve(callbackArgs);\n          }\n        };\n      };\n\n      const pluralizeArguments = numArgs => numArgs == 1 ? \"argument\" : \"arguments\";\n\n      /**\n       * Creates a wrapper function for a method with the given name and metadata.\n       *\n       * @param {string} name\n       *        The name of the method which is being wrapped.\n       * @param {object} metadata\n       *        Metadata about the method being wrapped.\n       * @param {integer} metadata.minArgs\n       *        The minimum number of arguments which must be passed to the\n       *        function. If called with fewer than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxArgs\n       *        The maximum number of arguments which may be passed to the\n       *        function. If called with more than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxResolvedArgs\n       *        The maximum number of arguments which may be passed to the\n       *        callback created by the wrapped async function.\n       *\n       * @returns {function(object, ...*)}\n       *       The generated wrapper function.\n       */\n      const wrapAsyncFunction = (name, metadata) => {\n        return function asyncFunctionWrapper(target, ...args) {\n          if (args.length < metadata.minArgs) {\n            throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n          }\n\n          if (args.length > metadata.maxArgs) {\n            throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n          }\n\n          return new Promise((resolve, reject) => {\n            if (metadata.fallbackToNoCallback) {\n              // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n              // and so the polyfill will try to call it with a callback first, and it will fallback\n              // to not passing the callback if the first call fails.\n              try {\n                target[name](...args, makeCallback({ resolve, reject }, metadata));\n              } catch (cbError) {\n                console.warn(`${name} API method doesn't seem to support the callback parameter, ` + \"falling back to call it without a callback: \", cbError);\n\n                target[name](...args);\n\n                // Update the API method metadata, so that the next API calls will not try to\n                // use the unsupported callback anymore.\n                metadata.fallbackToNoCallback = false;\n                metadata.noCallback = true;\n\n                resolve();\n              }\n            } else if (metadata.noCallback) {\n              target[name](...args);\n              resolve();\n            } else {\n              target[name](...args, makeCallback({ resolve, reject }, metadata));\n            }\n          });\n        };\n      };\n\n      /**\n       * Wraps an existing method of the target object, so that calls to it are\n       * intercepted by the given wrapper function. The wrapper function receives,\n       * as its first argument, the original `target` object, followed by each of\n       * the arguments passed to the original method.\n       *\n       * @param {object} target\n       *        The original target object that the wrapped method belongs to.\n       * @param {function} method\n       *        The method being wrapped. This is used as the target of the Proxy\n       *        object which is created to wrap the method.\n       * @param {function} wrapper\n       *        The wrapper function which is called in place of a direct invocation\n       *        of the wrapped method.\n       *\n       * @returns {Proxy<function>}\n       *        A Proxy object for the given method, which invokes the given wrapper\n       *        method in its place.\n       */\n      const wrapMethod = (target, method, wrapper) => {\n        return new Proxy(method, {\n          apply(targetMethod, thisObj, args) {\n            return wrapper.call(thisObj, target, ...args);\n          }\n        });\n      };\n\n      let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\n      /**\n       * Wraps an object in a Proxy which intercepts and wraps certain methods\n       * based on the given `wrappers` and `metadata` objects.\n       *\n       * @param {object} target\n       *        The target object to wrap.\n       *\n       * @param {object} [wrappers = {}]\n       *        An object tree containing wrapper functions for special cases. Any\n       *        function present in this object tree is called in place of the\n       *        method in the same location in the `target` object tree. These\n       *        wrapper methods are invoked as described in {@see wrapMethod}.\n       *\n       * @param {object} [metadata = {}]\n       *        An object tree containing metadata used to automatically generate\n       *        Promise-based wrapper functions for asynchronous. Any function in\n       *        the `target` object tree which has a corresponding metadata object\n       *        in the same location in the `metadata` tree is replaced with an\n       *        automatically-generated wrapper function, as described in\n       *        {@see wrapAsyncFunction}\n       *\n       * @returns {Proxy<object>}\n       */\n      const wrapObject = (target, wrappers = {}, metadata = {}) => {\n        let cache = Object.create(null);\n        let handlers = {\n          has(proxyTarget, prop) {\n            return prop in target || prop in cache;\n          },\n\n          get(proxyTarget, prop, receiver) {\n            if (prop in cache) {\n              return cache[prop];\n            }\n\n            if (!(prop in target)) {\n              return undefined;\n            }\n\n            let value = target[prop];\n\n            if (typeof value === \"function\") {\n              // This is a method on the underlying object. Check if we need to do\n              // any wrapping.\n\n              if (typeof wrappers[prop] === \"function\") {\n                // We have a special-case wrapper for this method.\n                value = wrapMethod(target, target[prop], wrappers[prop]);\n              } else if (hasOwnProperty(metadata, prop)) {\n                // This is an async method that we have metadata for. Create a\n                // Promise wrapper for it.\n                let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n                value = wrapMethod(target, target[prop], wrapper);\n              } else {\n                // This is a method that we don't know or care about. Return the\n                // original method, bound to the underlying object.\n                value = value.bind(target);\n              }\n            } else if (typeof value === \"object\" && value !== null && (hasOwnProperty(wrappers, prop) || hasOwnProperty(metadata, prop))) {\n              // This is an object that we need to do some wrapping for the children\n              // of. Create a sub-object wrapper for it with the appropriate child\n              // metadata.\n              value = wrapObject(value, wrappers[prop], metadata[prop]);\n            } else {\n              // We don't need to do any wrapping for this property,\n              // so just forward all access to the underlying object.\n              Object.defineProperty(cache, prop, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                  return target[prop];\n                },\n                set(value) {\n                  target[prop] = value;\n                }\n              });\n\n              return value;\n            }\n\n            cache[prop] = value;\n            return value;\n          },\n\n          set(proxyTarget, prop, value, receiver) {\n            if (prop in cache) {\n              cache[prop] = value;\n            } else {\n              target[prop] = value;\n            }\n            return true;\n          },\n\n          defineProperty(proxyTarget, prop, desc) {\n            return Reflect.defineProperty(cache, prop, desc);\n          },\n\n          deleteProperty(proxyTarget, prop) {\n            return Reflect.deleteProperty(cache, prop);\n          }\n        };\n\n        // Per contract of the Proxy API, the \"get\" proxy handler must return the\n        // original value of the target if that value is declared read-only and\n        // non-configurable. For this reason, we create an object with the\n        // prototype set to `target` instead of using `target` directly.\n        // Otherwise we cannot return a custom object for APIs that\n        // are declared read-only and non-configurable, such as `chrome.devtools`.\n        //\n        // The proxy handlers themselves will still use the original `target`\n        // instead of the `proxyTarget`, so that the methods and properties are\n        // dereferenced via the original targets.\n        let proxyTarget = Object.create(target);\n        return new Proxy(proxyTarget, handlers);\n      };\n\n      /**\n       * Creates a set of wrapper functions for an event object, which handles\n       * wrapping of listener functions that those messages are passed.\n       *\n       * A single wrapper is created for each listener function, and stored in a\n       * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n       * retrieve the original wrapper, so that  attempts to remove a\n       * previously-added listener work as expected.\n       *\n       * @param {DefaultWeakMap<function, function>} wrapperMap\n       *        A DefaultWeakMap object which will create the appropriate wrapper\n       *        for a given listener function when one does not exist, and retrieve\n       *        an existing one when it does.\n       *\n       * @returns {object}\n       */\n      const wrapEvent = wrapperMap => ({\n        addListener(target, listener, ...args) {\n          target.addListener(wrapperMap.get(listener), ...args);\n        },\n\n        hasListener(target, listener) {\n          return target.hasListener(wrapperMap.get(listener));\n        },\n\n        removeListener(target, listener) {\n          target.removeListener(wrapperMap.get(listener));\n        }\n      });\n\n      // Keep track if the deprecation warning has been logged at least once.\n      let loggedSendResponseDeprecationWarning = false;\n\n      const onMessageWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n\n        /**\n         * Wraps a message listener function so that it may send responses based on\n         * its return value, rather than by returning a sentinel value and calling a\n         * callback. If the listener function returns a Promise, the response is\n         * sent when the promise either resolves or rejects.\n         *\n         * @param {*} message\n         *        The message sent by the other end of the channel.\n         * @param {object} sender\n         *        Details about the sender of the message.\n         * @param {function(*)} sendResponse\n         *        A callback which, when called with an arbitrary argument, sends\n         *        that value as a response.\n         * @returns {boolean}\n         *        True if the wrapped listener returned a Promise, which will later\n         *        yield a response. False otherwise.\n         */\n        return function onMessage(message, sender, sendResponse) {\n          let didCallSendResponse = false;\n\n          let wrappedSendResponse;\n          let sendResponsePromise = new Promise(resolve => {\n            wrappedSendResponse = function (response) {\n              if (!loggedSendResponseDeprecationWarning) {\n                console.warn(SEND_RESPONSE_DEPRECATION_WARNING, new Error().stack);\n                loggedSendResponseDeprecationWarning = true;\n              }\n              didCallSendResponse = true;\n              resolve(response);\n            };\n          });\n\n          let result;\n          try {\n            result = listener(message, sender, wrappedSendResponse);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n\n          const isResultThenable = result !== true && isThenable(result);\n\n          // If the listener didn't returned true or a Promise, or called\n          // wrappedSendResponse synchronously, we can exit earlier\n          // because there will be no response sent from this listener.\n          if (result !== true && !isResultThenable && !didCallSendResponse) {\n            return false;\n          }\n\n          // A small helper to send the message if the promise resolves\n          // and an error if the promise rejects (a wrapped sendMessage has\n          // to translate the message into a resolved promise or a rejected\n          // promise).\n          const sendPromisedResult = promise => {\n            promise.then(msg => {\n              // send the message value.\n              sendResponse(msg);\n            }, error => {\n              // Send a JSON representation of the error if the rejected value\n              // is an instance of error, or the object itself otherwise.\n              let message;\n              if (error && (error instanceof Error || typeof error.message === \"string\")) {\n                message = error.message;\n              } else {\n                message = \"An unexpected error occurred\";\n              }\n\n              sendResponse({\n                __mozWebExtensionPolyfillReject__: true,\n                message\n              });\n            }).catch(err => {\n              // Print an error on the console if unable to send the response.\n              console.error(\"Failed to send onMessage rejected reply\", err);\n            });\n          };\n\n          // If the listener returned a Promise, send the resolved value as a\n          // result, otherwise wait the promise related to the wrappedSendResponse\n          // callback to resolve and send it as a response.\n          if (isResultThenable) {\n            sendPromisedResult(result);\n          } else {\n            sendPromisedResult(sendResponsePromise);\n          }\n\n          // Let Chrome know that the listener is replying.\n          return true;\n        };\n      });\n\n      const wrappedSendMessageCallback = ({ reject, resolve }, reply) => {\n        if (chrome.runtime.lastError) {\n          // Detect when none of the listeners replied to the sendMessage call and resolve\n          // the promise to undefined as in Firefox.\n          // See https://github.com/mozilla/webextension-polyfill/issues/130\n          if (chrome.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n            resolve();\n          } else {\n            reject(chrome.runtime.lastError);\n          }\n        } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n          // Convert back the JSON representation of the error into\n          // an Error instance.\n          reject(new Error(reply.message));\n        } else {\n          resolve(reply);\n        }\n      };\n\n      const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n\n        return new Promise((resolve, reject) => {\n          const wrappedCb = wrappedSendMessageCallback.bind(null, { resolve, reject });\n          args.push(wrappedCb);\n          apiNamespaceObj.sendMessage(...args);\n        });\n      };\n\n      const staticWrappers = {\n        runtime: {\n          onMessage: wrapEvent(onMessageWrappers),\n          onMessageExternal: wrapEvent(onMessageWrappers),\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", { minArgs: 1, maxArgs: 3 })\n        },\n        tabs: {\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", { minArgs: 2, maxArgs: 3 })\n        }\n      };\n      const settingMetadata = {\n        clear: { minArgs: 1, maxArgs: 1 },\n        get: { minArgs: 1, maxArgs: 1 },\n        set: { minArgs: 1, maxArgs: 1 }\n      };\n      apiMetadata.privacy = {\n        network: {\n          networkPredictionEnabled: settingMetadata,\n          webRTCIPHandlingPolicy: settingMetadata\n        },\n        services: {\n          passwordSavingEnabled: settingMetadata\n        },\n        websites: {\n          hyperlinkAuditingEnabled: settingMetadata,\n          referrersEnabled: settingMetadata\n        }\n      };\n\n      return wrapObject(chrome, staticWrappers, apiMetadata);\n    };\n\n    // The build process adds a UMD wrapper around this file, which makes the\n    // `module` variable available.\n    module.exports = wrapAPIs(); // eslint-disable-line no-undef\n  } else {\n    module.exports = browser; // eslint-disable-line no-undef\n  }\n});\n//# sourceMappingURL=browser-polyfill.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n");

/***/ }),

/***/ 36:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = (input, terminatingCharacter) => {\n  if (!input) return '';\n  return input.replace(/[`'\"\\\\\\n\\r\\u2028\\u2029\\u005c]/g, character => {\n    switch (character) {\n      case `\"`:\n      case `'`:\n      case '`':\n        if (!terminatingCharacter) return '\\\\' + character;else if (terminatingCharacter === character) return '\\\\' + character;else return character;\n\n      case '\\n':\n        return '\\\\n';\n\n      case '\\r':\n        return '\\\\r';\n\n      case '\\u2028':\n        return '\\\\u2028';\n\n      case '\\u2029':\n        return '\\\\u2029';\n\n      case '\\u005c':\n        return '\\\\\\\\';\n\n      default:\n        return character;\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9zdHJpbmctZXNjYXBlL2luZGV4LmpzPzM5NzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gKGlucHV0LCB0ZXJtaW5hdGluZ0NoYXJhY3RlcikgPT4ge1xuICBpZiAoIWlucHV0KSByZXR1cm4gJyc7XG4gIHJldHVybiBpbnB1dC5yZXBsYWNlKC9bYCdcIlxcXFxcXG5cXHJcXHUyMDI4XFx1MjAyOVxcdTAwNWNdL2csIGNoYXJhY3RlciA9PiB7XG4gICAgc3dpdGNoIChjaGFyYWN0ZXIpIHtcbiAgICAgIGNhc2UgYFwiYDpcbiAgICAgIGNhc2UgYCdgOlxuICAgICAgY2FzZSAnYCc6XG4gICAgICAgIGlmICghdGVybWluYXRpbmdDaGFyYWN0ZXIpIHJldHVybiAnXFxcXCcgKyBjaGFyYWN0ZXI7ZWxzZSBpZiAodGVybWluYXRpbmdDaGFyYWN0ZXIgPT09IGNoYXJhY3RlcikgcmV0dXJuICdcXFxcJyArIGNoYXJhY3RlcjtlbHNlIHJldHVybiBjaGFyYWN0ZXI7XG5cbiAgICAgIGNhc2UgJ1xcbic6XG4gICAgICAgIHJldHVybiAnXFxcXG4nO1xuXG4gICAgICBjYXNlICdcXHInOlxuICAgICAgICByZXR1cm4gJ1xcXFxyJztcblxuICAgICAgY2FzZSAnXFx1MjAyOCc6XG4gICAgICAgIHJldHVybiAnXFxcXHUyMDI4JztcblxuICAgICAgY2FzZSAnXFx1MjAyOSc6XG4gICAgICAgIHJldHVybiAnXFxcXHUyMDI5JztcblxuICAgICAgY2FzZSAnXFx1MDA1Yyc6XG4gICAgICAgIHJldHVybiAnXFxcXFxcXFwnO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gY2hhcmFjdGVyO1xuICAgIH1cbiAgfSk7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC9tbnQvYy95Yy9pbnN0YW50YXBpL3NlbGVuaXVtLWlkZS9wYWNrYWdlcy9zaWRlLXV0aWxzL2Rpc3Qvc3RyaW5nLWVzY2FwZS9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMzZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgNCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///36\n");

/***/ }),

/***/ 415:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(416);


/***/ }),

/***/ 416:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_webextension_polyfill__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__common_utils__ = __webpack_require__(45);\nfunction _objectSpread2(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==='function'){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}/*\r\n * Copyright 2017 SideeX committers\r\n *\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\r\n *  you may not use this file except in compliance with the License.\r\n *  You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *  See the License for the specific language governing permissions and\r\n *  limitations under the License.\r\n *\r\n */let ideWindowId=undefined;let master={};let clickEnabled=true;window.master=master;window.openedWindowIds=[];if(__WEBPACK_IMPORTED_MODULE_1__common_utils__[\"b\" /* isStaging */])openPanel({windowId:0});function openPanel(tab){let contentWindowId=tab.windowId;if(ideWindowId){__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.windows.update(ideWindowId,{focused:true}).catch(function(){ideWindowId==undefined;openPanel(tab);});return;}else if(!clickEnabled){return;}clickEnabled=false;setTimeout(function(){clickEnabled=true;},1500);return openWindowFromStorageResolution().then(function waitForPanelLoaded(panelWindowInfo){return new Promise(function(resolve,reject){let count=0;let interval=setInterval(function(){if(count>100){reject('SideeX editor has no response');clearInterval(interval);}__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.tabs.query({active:true,windowId:panelWindowInfo.id,status:'complete'}).then(function(tabs){if(tabs.length!=1){count++;return;}else{master[contentWindowId]=panelWindowInfo.id;resolve(panelWindowInfo);clearInterval(interval);}});},200);});}).then(function bridge(panelWindowInfo){ideWindowId=panelWindowInfo.id;return __WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.tabs.sendMessage(panelWindowInfo.tabs[0].id,{selfWindowId:panelWindowInfo.id,commWindowId:contentWindowId});}).catch(function(e){console.log(e);// eslint-disable-line no-console\n});}function openWindowFromStorageResolution(){let opts={height:690,width:550};return __WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.storage.local.get().then(storage=>{if(sizeIsValid(storage.size)){opts.height=storage.size.height;opts.width=storage.size.width;}if(originIsValid(storage.origin)){opts.top=storage.origin.top;opts.left=storage.origin.left;}return __WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.windows.create(Object.assign({url:__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.extension.getURL('index.html'),type:'popup'},opts));}).catch(e=>{console.error(e);// eslint-disable-line no-console\nreturn __WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.windows.create(Object.assign({url:__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.extension.getURL('index.html'),type:'popup'},opts));});}function sizeIsValid(size){return size&&sideIsValid(size.height)&&sideIsValid(size.width);}function sideIsValid(number){return number&&number.constructor.name==='Number'&&number>50;}function originIsValid(origin){return origin&&pointIsValid(origin.top)&&pointIsValid(origin.left);}function pointIsValid(point){return point>=0&&point.constructor.name==='Number';}__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.browserAction.onClicked.addListener(openPanel);__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.windows.onRemoved.addListener(function(windowId){let keys=Object.keys(master);for(let key of keys){if(master[key]===windowId){delete master[key];if(keys.length===1){__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.contextMenus.removeAll();}}}if(windowId===ideWindowId){ideWindowId=undefined;Promise.all(window.openedWindowIds.map(windowId=>__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.windows.remove(windowId).catch(()=>{/* Window was removed previously by the user */}))).then(()=>{window.openedWindowIds=[];});}});let port;__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.contextMenus.onClicked.addListener(function(info){port.postMessage({cmd:info.menuItemId});});__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.onConnect.addListener(function(m){port=m;});__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.onMessage.addListener(handleInternalMessage);function handleInternalMessage(message){if(message.restart&&message.controller&&message.controller.id){ideWindowId=undefined;__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.sendMessage({uri:'/private/close',verb:'post',payload:null}).then(()=>{openPanel({windowId:0}).then(()=>{var payload=_objectSpread2({},message);delete payload.restart;const newMessage={uri:'/private/connect',verb:'post',payload:payload};__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.sendMessage(newMessage).then(__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.sendMessage(message.controller.id,{connected:true})).catch(()=>{__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.sendMessage(message.controller.id,'Error Connecting to Selenium IDE');});});});}}__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.onMessageExternal.addListener((message,sender,sendResponse)=>{if(!message.payload){message.payload={};}let payload=message.payload;payload.sender=sender.id;if(message.uri.startsWith('/private/')){return sendResponse(false);}__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.sendMessage(message).then(sendResponse).catch(()=>{if(message.uri=='/control'&&message.verb=='post'){return openPanel({windowId:0}).then(()=>{const newMessage={uri:'/private/connect',verb:'post',payload:{controller:{id:payload.sender,name:payload.name,version:payload.version,commands:payload.commands,dependencies:payload.dependencies,jest:payload.jest,exports:payload.exports}}};__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.sendMessage(newMessage).then(sendResponse);});}else if(message.openSeleniumIDEIfClosed){return openPanel({windowId:0}).then(()=>{sendResponse(true);});}else{return sendResponse({error:'Selenium IDE is not active'});}});return true;});__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.runtime.onInstalled.addListener(()=>{// Notify updates only in production\nif(undefined==='production'){__WEBPACK_IMPORTED_MODULE_0_webextension_polyfill___default.a.storage.local.set({updated:true});}});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///416\n");

/***/ }),

/***/ 45:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export isChrome */\n/* unused harmony export isFirefox */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__seleniumhq_side_utils__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__seleniumhq_side_utils___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__seleniumhq_side_utils__);\nconst isProduction=true;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isProduction;\nconst isStaging=__WEBPACK_IMPORTED_MODULE_0__seleniumhq_side_utils__[\"environment\"].isStaging;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = isStaging;\nconst isTest=__WEBPACK_IMPORTED_MODULE_0__seleniumhq_side_utils__[\"environment\"].isTest;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = isTest;\nconst userAgent=__WEBPACK_IMPORTED_MODULE_0__seleniumhq_side_utils__[\"userAgent\"].userAgent;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = userAgent;\nfunction isChrome(){__WEBPACK_IMPORTED_MODULE_0__seleniumhq_side_utils__[\"userAgent\"].isChrome;}function isFirefox(){__WEBPACK_IMPORTED_MODULE_0__seleniumhq_side_utils__[\"userAgent\"].isFirefox;}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21tb24vdXRpbHMuanM/ZGYwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7dXNlckFnZW50IGFzIF91c2VyQWdlbnQsZW52aXJvbm1lbnR9ZnJvbSdAc2VsZW5pdW1ocS9zaWRlLXV0aWxzJztleHBvcnQgY29uc3QgaXNQcm9kdWN0aW9uPXRydWU7ZXhwb3J0IGNvbnN0IGlzU3RhZ2luZz1lbnZpcm9ubWVudC5pc1N0YWdpbmc7ZXhwb3J0IGNvbnN0IGlzVGVzdD1lbnZpcm9ubWVudC5pc1Rlc3Q7ZXhwb3J0IGNvbnN0IHVzZXJBZ2VudD1fdXNlckFnZW50LnVzZXJBZ2VudDtleHBvcnQgZnVuY3Rpb24gaXNDaHJvbWUoKXtfdXNlckFnZW50LmlzQ2hyb21lO31leHBvcnQgZnVuY3Rpb24gaXNGaXJlZm94KCl7X3VzZXJBZ2VudC5pc0ZpcmVmb3g7fVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tbW9uL3V0aWxzLmpzXG4vLyBtb2R1bGUgaWQgPSA0NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiA0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///45\n");

/***/ }),

/***/ 52:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preprocessParameter = preprocessParameter;\nexports.defaultPreprocessor = defaultPreprocessor;\nexports.scriptPreprocessor = scriptPreprocessor;\nexports.keysPreprocessor = keysPreprocessor;\n\nvar _stringEscape = _interopRequireDefault(__webpack_require__(36));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nfunction escapeString(string, {\n  preprocessor,\n  ignoreEscaping\n}) {\n  if (ignoreEscaping) return string;else if (preprocessor && preprocessor.name === 'scriptPreprocessor') return string.replace(/\"/g, \"'\");else return (0, _stringEscape.default)(string);\n}\n\nfunction preprocessParameter(param, preprocessor, variableLookup, {\n  ignoreEscaping\n}) {\n  const escapedParam = escapeString(param, {\n    preprocessor,\n    ignoreEscaping\n  });\n  return preprocessor ? preprocessor(escapedParam, variableLookup) : defaultPreprocessor(escapedParam, variableLookup);\n}\n\nfunction defaultPreprocessor(param, variableLookup) {\n  if (!param) return;\n\n  const _var = param.match(/\\$\\{(\\w+)\\}/);\n\n  if (_var) {\n    return param.replace(_var[0], variableLookup(_var[1]));\n  } else {\n    return param;\n  }\n}\n\nfunction scriptPreprocessor(script) {\n  let value = script.replace(/^\\s+/, '').replace(/\\s+$/, '');\n  let r2;\n  let parts = [];\n  const variablesUsed = {};\n  const argv = [];\n  let argl = 0; // length of arguments\n\n  if (/\\$\\{/.exec(value)) {\n    const regexp = /\\$\\{(.*?)\\}/g;\n    let lastIndex = 0;\n\n    while (r2 = regexp.exec(value)) {\n      const variableName = r2[1];\n\n      if (r2.index - lastIndex > 0) {\n        parts.push(value.substring(lastIndex, r2.index));\n      }\n\n      if (!variablesUsed.hasOwnProperty(variableName)) {\n        variablesUsed[variableName] = argl;\n        argv.push(variableName);\n        argl++;\n      }\n\n      parts.push(`arguments[${variablesUsed[variableName]}]`);\n      lastIndex = regexp.lastIndex;\n    }\n\n    if (lastIndex < value.length) {\n      parts.push(value.substring(lastIndex, value.length));\n    }\n\n    return {\n      script: parts.join(''),\n      argv\n    };\n  } else {\n    return {\n      script: value,\n      argv\n    };\n  }\n}\n\nfunction keysPreprocessor(str, variableLookup) {\n  let keys = [];\n  let match = str.match(/\\$\\{\\w+\\}/g);\n\n  if (!match) {\n    keys.push(str);\n  } else {\n    let i = 0;\n\n    while (i < str.length) {\n      let currentKey = match.shift(),\n          currentKeyIndex = str.indexOf(currentKey, i);\n\n      if (currentKeyIndex > i) {\n        // push the string before the current key\n        keys.push(str.substr(i, currentKeyIndex - i));\n        i = currentKeyIndex;\n      }\n\n      if (currentKey) {\n        if (/^\\$\\{KEY_\\w+\\}/.test(currentKey)) {\n          // is a key\n          let keyName = currentKey.match(/\\$\\{KEY_(\\w+)\\}/)[1];\n          keys.push(`Key['${keyName}']`);\n        } else {\n          // not a key, assume stored variables interpolation\n          keys.push(defaultPreprocessor(currentKey, variableLookup));\n        }\n\n        i += currentKey.length;\n      } else if (i < str.length) {\n        // push the rest of the string\n        keys.push(str.substr(i, str.length));\n        i = str.length;\n      }\n    }\n  }\n\n  return keys;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9wcmVwcm9jZXNzb3IuanM/N2YyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucHJlcHJvY2Vzc1BhcmFtZXRlciA9IHByZXByb2Nlc3NQYXJhbWV0ZXI7XG5leHBvcnRzLmRlZmF1bHRQcmVwcm9jZXNzb3IgPSBkZWZhdWx0UHJlcHJvY2Vzc29yO1xuZXhwb3J0cy5zY3JpcHRQcmVwcm9jZXNzb3IgPSBzY3JpcHRQcmVwcm9jZXNzb3I7XG5leHBvcnRzLmtleXNQcmVwcm9jZXNzb3IgPSBrZXlzUHJlcHJvY2Vzc29yO1xuXG52YXIgX3N0cmluZ0VzY2FwZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3N0cmluZy1lc2NhcGVcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBMaWNlbnNlZCB0byB0aGUgU29mdHdhcmUgRnJlZWRvbSBDb25zZXJ2YW5jeSAoU0ZDKSB1bmRlciBvbmVcbi8vIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuLy8gZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbi8vIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIFNGQyBsaWNlbnNlcyB0aGlzIGZpbGVcbi8vIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbi8vIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuLy8gd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuLy8gc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbi8vIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4vLyBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbi8vIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbi8vIHVuZGVyIHRoZSBMaWNlbnNlLlxuZnVuY3Rpb24gZXNjYXBlU3RyaW5nKHN0cmluZywge1xuICBwcmVwcm9jZXNzb3IsXG4gIGlnbm9yZUVzY2FwaW5nXG59KSB7XG4gIGlmIChpZ25vcmVFc2NhcGluZykgcmV0dXJuIHN0cmluZztlbHNlIGlmIChwcmVwcm9jZXNzb3IgJiYgcHJlcHJvY2Vzc29yLm5hbWUgPT09ICdzY3JpcHRQcmVwcm9jZXNzb3InKSByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL1wiL2csIFwiJ1wiKTtlbHNlIHJldHVybiAoMCwgX3N0cmluZ0VzY2FwZS5kZWZhdWx0KShzdHJpbmcpO1xufVxuXG5mdW5jdGlvbiBwcmVwcm9jZXNzUGFyYW1ldGVyKHBhcmFtLCBwcmVwcm9jZXNzb3IsIHZhcmlhYmxlTG9va3VwLCB7XG4gIGlnbm9yZUVzY2FwaW5nXG59KSB7XG4gIGNvbnN0IGVzY2FwZWRQYXJhbSA9IGVzY2FwZVN0cmluZyhwYXJhbSwge1xuICAgIHByZXByb2Nlc3NvcixcbiAgICBpZ25vcmVFc2NhcGluZ1xuICB9KTtcbiAgcmV0dXJuIHByZXByb2Nlc3NvciA/IHByZXByb2Nlc3Nvcihlc2NhcGVkUGFyYW0sIHZhcmlhYmxlTG9va3VwKSA6IGRlZmF1bHRQcmVwcm9jZXNzb3IoZXNjYXBlZFBhcmFtLCB2YXJpYWJsZUxvb2t1cCk7XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcmVwcm9jZXNzb3IocGFyYW0sIHZhcmlhYmxlTG9va3VwKSB7XG4gIGlmICghcGFyYW0pIHJldHVybjtcblxuICBjb25zdCBfdmFyID0gcGFyYW0ubWF0Y2goL1xcJFxceyhcXHcrKVxcfS8pO1xuXG4gIGlmIChfdmFyKSB7XG4gICAgcmV0dXJuIHBhcmFtLnJlcGxhY2UoX3ZhclswXSwgdmFyaWFibGVMb29rdXAoX3ZhclsxXSkpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBwYXJhbTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzY3JpcHRQcmVwcm9jZXNzb3Ioc2NyaXB0KSB7XG4gIGxldCB2YWx1ZSA9IHNjcmlwdC5yZXBsYWNlKC9eXFxzKy8sICcnKS5yZXBsYWNlKC9cXHMrJC8sICcnKTtcbiAgbGV0IHIyO1xuICBsZXQgcGFydHMgPSBbXTtcbiAgY29uc3QgdmFyaWFibGVzVXNlZCA9IHt9O1xuICBjb25zdCBhcmd2ID0gW107XG4gIGxldCBhcmdsID0gMDsgLy8gbGVuZ3RoIG9mIGFyZ3VtZW50c1xuXG4gIGlmICgvXFwkXFx7Ly5leGVjKHZhbHVlKSkge1xuICAgIGNvbnN0IHJlZ2V4cCA9IC9cXCRcXHsoLio/KVxcfS9nO1xuICAgIGxldCBsYXN0SW5kZXggPSAwO1xuXG4gICAgd2hpbGUgKHIyID0gcmVnZXhwLmV4ZWModmFsdWUpKSB7XG4gICAgICBjb25zdCB2YXJpYWJsZU5hbWUgPSByMlsxXTtcblxuICAgICAgaWYgKHIyLmluZGV4IC0gbGFzdEluZGV4ID4gMCkge1xuICAgICAgICBwYXJ0cy5wdXNoKHZhbHVlLnN1YnN0cmluZyhsYXN0SW5kZXgsIHIyLmluZGV4KSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghdmFyaWFibGVzVXNlZC5oYXNPd25Qcm9wZXJ0eSh2YXJpYWJsZU5hbWUpKSB7XG4gICAgICAgIHZhcmlhYmxlc1VzZWRbdmFyaWFibGVOYW1lXSA9IGFyZ2w7XG4gICAgICAgIGFyZ3YucHVzaCh2YXJpYWJsZU5hbWUpO1xuICAgICAgICBhcmdsKys7XG4gICAgICB9XG5cbiAgICAgIHBhcnRzLnB1c2goYGFyZ3VtZW50c1ske3ZhcmlhYmxlc1VzZWRbdmFyaWFibGVOYW1lXX1dYCk7XG4gICAgICBsYXN0SW5kZXggPSByZWdleHAubGFzdEluZGV4O1xuICAgIH1cblxuICAgIGlmIChsYXN0SW5kZXggPCB2YWx1ZS5sZW5ndGgpIHtcbiAgICAgIHBhcnRzLnB1c2godmFsdWUuc3Vic3RyaW5nKGxhc3RJbmRleCwgdmFsdWUubGVuZ3RoKSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNjcmlwdDogcGFydHMuam9pbignJyksXG4gICAgICBhcmd2XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2NyaXB0OiB2YWx1ZSxcbiAgICAgIGFyZ3ZcbiAgICB9O1xuICB9XG59XG5cbmZ1bmN0aW9uIGtleXNQcmVwcm9jZXNzb3Ioc3RyLCB2YXJpYWJsZUxvb2t1cCkge1xuICBsZXQga2V5cyA9IFtdO1xuICBsZXQgbWF0Y2ggPSBzdHIubWF0Y2goL1xcJFxce1xcdytcXH0vZyk7XG5cbiAgaWYgKCFtYXRjaCkge1xuICAgIGtleXMucHVzaChzdHIpO1xuICB9IGVsc2Uge1xuICAgIGxldCBpID0gMDtcblxuICAgIHdoaWxlIChpIDwgc3RyLmxlbmd0aCkge1xuICAgICAgbGV0IGN1cnJlbnRLZXkgPSBtYXRjaC5zaGlmdCgpLFxuICAgICAgICAgIGN1cnJlbnRLZXlJbmRleCA9IHN0ci5pbmRleE9mKGN1cnJlbnRLZXksIGkpO1xuXG4gICAgICBpZiAoY3VycmVudEtleUluZGV4ID4gaSkge1xuICAgICAgICAvLyBwdXNoIHRoZSBzdHJpbmcgYmVmb3JlIHRoZSBjdXJyZW50IGtleVxuICAgICAgICBrZXlzLnB1c2goc3RyLnN1YnN0cihpLCBjdXJyZW50S2V5SW5kZXggLSBpKSk7XG4gICAgICAgIGkgPSBjdXJyZW50S2V5SW5kZXg7XG4gICAgICB9XG5cbiAgICAgIGlmIChjdXJyZW50S2V5KSB7XG4gICAgICAgIGlmICgvXlxcJFxce0tFWV9cXHcrXFx9Ly50ZXN0KGN1cnJlbnRLZXkpKSB7XG4gICAgICAgICAgLy8gaXMgYSBrZXlcbiAgICAgICAgICBsZXQga2V5TmFtZSA9IGN1cnJlbnRLZXkubWF0Y2goL1xcJFxce0tFWV8oXFx3KylcXH0vKVsxXTtcbiAgICAgICAgICBrZXlzLnB1c2goYEtleVsnJHtrZXlOYW1lfSddYCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gbm90IGEga2V5LCBhc3N1bWUgc3RvcmVkIHZhcmlhYmxlcyBpbnRlcnBvbGF0aW9uXG4gICAgICAgICAga2V5cy5wdXNoKGRlZmF1bHRQcmVwcm9jZXNzb3IoY3VycmVudEtleSwgdmFyaWFibGVMb29rdXApKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGkgKz0gY3VycmVudEtleS5sZW5ndGg7XG4gICAgICB9IGVsc2UgaWYgKGkgPCBzdHIubGVuZ3RoKSB7XG4gICAgICAgIC8vIHB1c2ggdGhlIHJlc3Qgb2YgdGhlIHN0cmluZ1xuICAgICAgICBrZXlzLnB1c2goc3RyLnN1YnN0cihpLCBzdHIubGVuZ3RoKSk7XG4gICAgICAgIGkgPSBzdHIubGVuZ3RoO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBrZXlzO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC9tbnQvYy95Yy9pbnN0YW50YXBpL3NlbGVuaXVtLWlkZS9wYWNrYWdlcy9zaWRlLXV0aWxzL2Rpc3QvY29kZS1leHBvcnQvcHJlcHJvY2Vzc29yLmpzXG4vLyBtb2R1bGUgaWQgPSA1MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiA0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///52\n");

/***/ }),

/***/ 53:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = render;\nexports.renderCommands = renderCommands;\n\nvar _prettify = _interopRequireDefault(__webpack_require__(54));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nfunction render(commandPrefixPadding, input, {\n  startingLevel,\n  newLineCount,\n  fullPayload,\n  originTracing\n} = {}) {\n  if (!startingLevel) startingLevel = 0;\n  if (!newLineCount) newLineCount = 1;\n  if (!fullPayload) fullPayload = false;\n\n  if (Array.isArray(input)) {\n    // e.g., an array of emitted command strings to be stitched together\n    return renderCommands(input, {\n      startingLevel,\n      commandPrefixPadding,\n      originTracing\n    });\n  } else {\n    const result = (0, _prettify.default)(input, {\n      commandPrefixPadding,\n      startingLevel\n    });\n    if (fullPayload) return result;\n    return result.body && result.body.length ? result.body + '\\n'.repeat(newLineCount) : '';\n  }\n}\n\nfunction renderCommands(commands, {\n  startingLevel,\n  commandPrefixPadding,\n  originTracing\n} = {}) {\n  let result = '';\n  let endingLevel = startingLevel;\n  const originTitle = originTracing ? originTracing.splice(0, 2) : undefined;\n\n  if (originTitle) {\n    result += render(commandPrefixPadding, originTitle.join('\\n'), {\n      startingLevel: endingLevel\n    });\n  }\n\n  commands.forEach((command, index) => {\n    if (originTracing) {\n      const originRecord = render(commandPrefixPadding, originTracing[index], {\n        startingLevel: endingLevel\n      });\n      result += originRecord;\n    }\n\n    if (command) {\n      const commandBlock = render(commandPrefixPadding, command, {\n        startingLevel: endingLevel,\n        fullPayload: true\n      });\n      endingLevel = commandBlock.endingLevel;\n\n      if (!commandBlock.skipEmitting) {\n        result += commandBlock.body;\n        result += '\\n';\n      }\n    }\n  });\n  return result;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9yZW5kZXIuanM/ZDU0MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJlbmRlcjtcbmV4cG9ydHMucmVuZGVyQ29tbWFuZHMgPSByZW5kZXJDb21tYW5kcztcblxudmFyIF9wcmV0dGlmeSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vcHJldHRpZnlcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBMaWNlbnNlZCB0byB0aGUgU29mdHdhcmUgRnJlZWRvbSBDb25zZXJ2YW5jeSAoU0ZDKSB1bmRlciBvbmVcbi8vIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuLy8gZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbi8vIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIFNGQyBsaWNlbnNlcyB0aGlzIGZpbGVcbi8vIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbi8vIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuLy8gd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuLy8gc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbi8vIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4vLyBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbi8vIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbi8vIHVuZGVyIHRoZSBMaWNlbnNlLlxuZnVuY3Rpb24gcmVuZGVyKGNvbW1hbmRQcmVmaXhQYWRkaW5nLCBpbnB1dCwge1xuICBzdGFydGluZ0xldmVsLFxuICBuZXdMaW5lQ291bnQsXG4gIGZ1bGxQYXlsb2FkLFxuICBvcmlnaW5UcmFjaW5nXG59ID0ge30pIHtcbiAgaWYgKCFzdGFydGluZ0xldmVsKSBzdGFydGluZ0xldmVsID0gMDtcbiAgaWYgKCFuZXdMaW5lQ291bnQpIG5ld0xpbmVDb3VudCA9IDE7XG4gIGlmICghZnVsbFBheWxvYWQpIGZ1bGxQYXlsb2FkID0gZmFsc2U7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgLy8gZS5nLiwgYW4gYXJyYXkgb2YgZW1pdHRlZCBjb21tYW5kIHN0cmluZ3MgdG8gYmUgc3RpdGNoZWQgdG9nZXRoZXJcbiAgICByZXR1cm4gcmVuZGVyQ29tbWFuZHMoaW5wdXQsIHtcbiAgICAgIHN0YXJ0aW5nTGV2ZWwsXG4gICAgICBjb21tYW5kUHJlZml4UGFkZGluZyxcbiAgICAgIG9yaWdpblRyYWNpbmdcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCByZXN1bHQgPSAoMCwgX3ByZXR0aWZ5LmRlZmF1bHQpKGlucHV0LCB7XG4gICAgICBjb21tYW5kUHJlZml4UGFkZGluZyxcbiAgICAgIHN0YXJ0aW5nTGV2ZWxcbiAgICB9KTtcbiAgICBpZiAoZnVsbFBheWxvYWQpIHJldHVybiByZXN1bHQ7XG4gICAgcmV0dXJuIHJlc3VsdC5ib2R5ICYmIHJlc3VsdC5ib2R5Lmxlbmd0aCA/IHJlc3VsdC5ib2R5ICsgJ1xcbicucmVwZWF0KG5ld0xpbmVDb3VudCkgOiAnJztcbiAgfVxufVxuXG5mdW5jdGlvbiByZW5kZXJDb21tYW5kcyhjb21tYW5kcywge1xuICBzdGFydGluZ0xldmVsLFxuICBjb21tYW5kUHJlZml4UGFkZGluZyxcbiAgb3JpZ2luVHJhY2luZ1xufSA9IHt9KSB7XG4gIGxldCByZXN1bHQgPSAnJztcbiAgbGV0IGVuZGluZ0xldmVsID0gc3RhcnRpbmdMZXZlbDtcbiAgY29uc3Qgb3JpZ2luVGl0bGUgPSBvcmlnaW5UcmFjaW5nID8gb3JpZ2luVHJhY2luZy5zcGxpY2UoMCwgMikgOiB1bmRlZmluZWQ7XG5cbiAgaWYgKG9yaWdpblRpdGxlKSB7XG4gICAgcmVzdWx0ICs9IHJlbmRlcihjb21tYW5kUHJlZml4UGFkZGluZywgb3JpZ2luVGl0bGUuam9pbignXFxuJyksIHtcbiAgICAgIHN0YXJ0aW5nTGV2ZWw6IGVuZGluZ0xldmVsXG4gICAgfSk7XG4gIH1cblxuICBjb21tYW5kcy5mb3JFYWNoKChjb21tYW5kLCBpbmRleCkgPT4ge1xuICAgIGlmIChvcmlnaW5UcmFjaW5nKSB7XG4gICAgICBjb25zdCBvcmlnaW5SZWNvcmQgPSByZW5kZXIoY29tbWFuZFByZWZpeFBhZGRpbmcsIG9yaWdpblRyYWNpbmdbaW5kZXhdLCB7XG4gICAgICAgIHN0YXJ0aW5nTGV2ZWw6IGVuZGluZ0xldmVsXG4gICAgICB9KTtcbiAgICAgIHJlc3VsdCArPSBvcmlnaW5SZWNvcmQ7XG4gICAgfVxuXG4gICAgaWYgKGNvbW1hbmQpIHtcbiAgICAgIGNvbnN0IGNvbW1hbmRCbG9jayA9IHJlbmRlcihjb21tYW5kUHJlZml4UGFkZGluZywgY29tbWFuZCwge1xuICAgICAgICBzdGFydGluZ0xldmVsOiBlbmRpbmdMZXZlbCxcbiAgICAgICAgZnVsbFBheWxvYWQ6IHRydWVcbiAgICAgIH0pO1xuICAgICAgZW5kaW5nTGV2ZWwgPSBjb21tYW5kQmxvY2suZW5kaW5nTGV2ZWw7XG5cbiAgICAgIGlmICghY29tbWFuZEJsb2NrLnNraXBFbWl0dGluZykge1xuICAgICAgICByZXN1bHQgKz0gY29tbWFuZEJsb2NrLmJvZHk7XG4gICAgICAgIHJlc3VsdCArPSAnXFxuJztcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC9tbnQvYy95Yy9pbnN0YW50YXBpL3NlbGVuaXVtLWlkZS9wYWNrYWdlcy9zaWRlLXV0aWxzL2Rpc3QvY29kZS1leHBvcnQvcmVuZGVyLmpzXG4vLyBtb2R1bGUgaWQgPSA1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiA0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///53\n");

/***/ }),

/***/ 54:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = prettify;\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/**\r\n * Returns a prettified string with indentation and line-breaks based on inputs\r\n * @param {Object|string} commandBlock The input to be prettified\r\n * @param {Object} opts - The styling options\r\n * @param {number} opts.startingLevel The staring indentation level\r\n * @param {string} opts.commandPrefixPadding The padding to use for indentation\r\n * @returns {Object} The prettified result (e.g., `.body`) and the absolute\r\n * indentation level (e.g., `endingLevel`) for the next command to use\r\n */\nfunction prettify(commandBlock, {\n  startingLevel,\n  commandPrefixPadding\n} = {}) {\n  if (commandBlock === undefined) return {\n    body: undefined\n  };\n  if (!startingLevel) startingLevel = 0;\n  if (commandBlock.startingLevelAdjustment) startingLevel += commandBlock.startingLevelAdjustment;\n  if (startingLevel < 0) startingLevel = 0;\n\n  if (typeof commandBlock.commands === 'object') {\n    if (commandBlock.skipEmitting) {\n      return {\n        endingLevel: calculateEndingLevel({\n          startingLevel,\n          commandBlock\n        }),\n        skipEmitting: commandBlock.skipEmitting\n      };\n    } else {\n      return {\n        body: commandBlock.commands.map(command => commandPrefixPadding.repeat(startingLevel + command.level) + command.statement).join('\\n'),\n        endingLevel: calculateEndingLevel({\n          startingLevel,\n          commandBlock\n        })\n      };\n    }\n  } else {\n    return {\n      body: commandBlock.split('\\n').join('\\n' + commandPrefixPadding.repeat(startingLevel)).replace(/^/, commandPrefixPadding.repeat(startingLevel)),\n      endingLevel: startingLevel\n    };\n  }\n}\n\nfunction calculateEndingLevel({\n  startingLevel,\n  commandBlock\n} = {}) {\n  let endingLevel = 0;\n\n  if (commandBlock.commands && commandBlock.commands.length > 0) {\n    endingLevel = commandBlock.commands[commandBlock.commands.length - 1].level || 0;\n  }\n\n  const endingLevelAdjustment = commandBlock.endingLevelAdjustment || 0;\n  const result = startingLevel + endingLevel + endingLevelAdjustment;\n  return result;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9wcmV0dGlmeS5qcz9lMDAwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcHJldHRpZnk7XG5cbi8vIExpY2Vuc2VkIHRvIHRoZSBTb2Z0d2FyZSBGcmVlZG9tIENvbnNlcnZhbmN5IChTRkMpIHVuZGVyIG9uZVxuLy8gb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4vLyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuLy8gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgU0ZDIGxpY2Vuc2VzIHRoaXMgZmlsZVxuLy8gdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuLy8gXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4vLyB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4vLyBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuLy8gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbi8vIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuLy8gc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuLy8gdW5kZXIgdGhlIExpY2Vuc2UuXG5cbi8qKlxyXG4gKiBSZXR1cm5zIGEgcHJldHRpZmllZCBzdHJpbmcgd2l0aCBpbmRlbnRhdGlvbiBhbmQgbGluZS1icmVha3MgYmFzZWQgb24gaW5wdXRzXHJcbiAqIEBwYXJhbSB7T2JqZWN0fHN0cmluZ30gY29tbWFuZEJsb2NrIFRoZSBpbnB1dCB0byBiZSBwcmV0dGlmaWVkXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIC0gVGhlIHN0eWxpbmcgb3B0aW9uc1xyXG4gKiBAcGFyYW0ge251bWJlcn0gb3B0cy5zdGFydGluZ0xldmVsIFRoZSBzdGFyaW5nIGluZGVudGF0aW9uIGxldmVsXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBvcHRzLmNvbW1hbmRQcmVmaXhQYWRkaW5nIFRoZSBwYWRkaW5nIHRvIHVzZSBmb3IgaW5kZW50YXRpb25cclxuICogQHJldHVybnMge09iamVjdH0gVGhlIHByZXR0aWZpZWQgcmVzdWx0IChlLmcuLCBgLmJvZHlgKSBhbmQgdGhlIGFic29sdXRlXHJcbiAqIGluZGVudGF0aW9uIGxldmVsIChlLmcuLCBgZW5kaW5nTGV2ZWxgKSBmb3IgdGhlIG5leHQgY29tbWFuZCB0byB1c2VcclxuICovXG5mdW5jdGlvbiBwcmV0dGlmeShjb21tYW5kQmxvY2ssIHtcbiAgc3RhcnRpbmdMZXZlbCxcbiAgY29tbWFuZFByZWZpeFBhZGRpbmdcbn0gPSB7fSkge1xuICBpZiAoY29tbWFuZEJsb2NrID09PSB1bmRlZmluZWQpIHJldHVybiB7XG4gICAgYm9keTogdW5kZWZpbmVkXG4gIH07XG4gIGlmICghc3RhcnRpbmdMZXZlbCkgc3RhcnRpbmdMZXZlbCA9IDA7XG4gIGlmIChjb21tYW5kQmxvY2suc3RhcnRpbmdMZXZlbEFkanVzdG1lbnQpIHN0YXJ0aW5nTGV2ZWwgKz0gY29tbWFuZEJsb2NrLnN0YXJ0aW5nTGV2ZWxBZGp1c3RtZW50O1xuICBpZiAoc3RhcnRpbmdMZXZlbCA8IDApIHN0YXJ0aW5nTGV2ZWwgPSAwO1xuXG4gIGlmICh0eXBlb2YgY29tbWFuZEJsb2NrLmNvbW1hbmRzID09PSAnb2JqZWN0Jykge1xuICAgIGlmIChjb21tYW5kQmxvY2suc2tpcEVtaXR0aW5nKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBlbmRpbmdMZXZlbDogY2FsY3VsYXRlRW5kaW5nTGV2ZWwoe1xuICAgICAgICAgIHN0YXJ0aW5nTGV2ZWwsXG4gICAgICAgICAgY29tbWFuZEJsb2NrXG4gICAgICAgIH0pLFxuICAgICAgICBza2lwRW1pdHRpbmc6IGNvbW1hbmRCbG9jay5za2lwRW1pdHRpbmdcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGJvZHk6IGNvbW1hbmRCbG9jay5jb21tYW5kcy5tYXAoY29tbWFuZCA9PiBjb21tYW5kUHJlZml4UGFkZGluZy5yZXBlYXQoc3RhcnRpbmdMZXZlbCArIGNvbW1hbmQubGV2ZWwpICsgY29tbWFuZC5zdGF0ZW1lbnQpLmpvaW4oJ1xcbicpLFxuICAgICAgICBlbmRpbmdMZXZlbDogY2FsY3VsYXRlRW5kaW5nTGV2ZWwoe1xuICAgICAgICAgIHN0YXJ0aW5nTGV2ZWwsXG4gICAgICAgICAgY29tbWFuZEJsb2NrXG4gICAgICAgIH0pXG4gICAgICB9O1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4ge1xuICAgICAgYm9keTogY29tbWFuZEJsb2NrLnNwbGl0KCdcXG4nKS5qb2luKCdcXG4nICsgY29tbWFuZFByZWZpeFBhZGRpbmcucmVwZWF0KHN0YXJ0aW5nTGV2ZWwpKS5yZXBsYWNlKC9eLywgY29tbWFuZFByZWZpeFBhZGRpbmcucmVwZWF0KHN0YXJ0aW5nTGV2ZWwpKSxcbiAgICAgIGVuZGluZ0xldmVsOiBzdGFydGluZ0xldmVsXG4gICAgfTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjYWxjdWxhdGVFbmRpbmdMZXZlbCh7XG4gIHN0YXJ0aW5nTGV2ZWwsXG4gIGNvbW1hbmRCbG9ja1xufSA9IHt9KSB7XG4gIGxldCBlbmRpbmdMZXZlbCA9IDA7XG5cbiAgaWYgKGNvbW1hbmRCbG9jay5jb21tYW5kcyAmJiBjb21tYW5kQmxvY2suY29tbWFuZHMubGVuZ3RoID4gMCkge1xuICAgIGVuZGluZ0xldmVsID0gY29tbWFuZEJsb2NrLmNvbW1hbmRzW2NvbW1hbmRCbG9jay5jb21tYW5kcy5sZW5ndGggLSAxXS5sZXZlbCB8fCAwO1xuICB9XG5cbiAgY29uc3QgZW5kaW5nTGV2ZWxBZGp1c3RtZW50ID0gY29tbWFuZEJsb2NrLmVuZGluZ0xldmVsQWRqdXN0bWVudCB8fCAwO1xuICBjb25zdCByZXN1bHQgPSBzdGFydGluZ0xldmVsICsgZW5kaW5nTGV2ZWwgKyBlbmRpbmdMZXZlbEFkanVzdG1lbnQ7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9wcmV0dGlmeS5qc1xuLy8gbW9kdWxlIGlkID0gNTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgNCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///54\n");

/***/ }),

/***/ 55:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerCommandEmitter = registerCommandEmitter;\nexports.registerPreprocessors = registerPreprocessors;\nexports.registerMethod = registerMethod;\n\nvar _preprocessor = __webpack_require__(52);\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nfunction registerCommandEmitter({\n  command,\n  emitter,\n  emitters\n} = {}) {\n  if (!emitters[command]) {\n    emitters[command] = emitter;\n  } else {\n    throw new Error('Unable to overwrite an existing command emitter');\n  }\n}\n\nfunction registerPreprocessors(emitters) {\n  Object.keys(emitters).forEach(emitter => {\n    switch (emitter) {\n      case 'sendKeys':\n        emitters[emitter].valuePreprocessor = _preprocessor.keysPreprocessor;\n        break;\n\n      case 'runScript':\n      case 'executeScript':\n      case 'executeAsyncScript':\n      case 'if':\n      case 'elseIf':\n      case 'repeatIf':\n      case 'while':\n        emitters[emitter].targetPreprocessor = _preprocessor.scriptPreprocessor;\n        break;\n    }\n  });\n}\n\nasync function registerMethod(name, result, {\n  generateMethodDeclaration,\n  hooks\n}) {\n  let methodDeclaration = generateMethodDeclaration(name);\n  methodDeclaration = typeof methodDeclaration === 'object' ? methodDeclaration.body : methodDeclaration;\n\n  if (!(await hooks.declareMethods.isRegistered(methodDeclaration))) {\n    result.forEach(statement => {\n      hooks.declareMethods.register(() => {\n        return statement;\n      });\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9yZWdpc3Rlci5qcz8xODQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yZWdpc3RlckNvbW1hbmRFbWl0dGVyID0gcmVnaXN0ZXJDb21tYW5kRW1pdHRlcjtcbmV4cG9ydHMucmVnaXN0ZXJQcmVwcm9jZXNzb3JzID0gcmVnaXN0ZXJQcmVwcm9jZXNzb3JzO1xuZXhwb3J0cy5yZWdpc3Rlck1ldGhvZCA9IHJlZ2lzdGVyTWV0aG9kO1xuXG52YXIgX3ByZXByb2Nlc3NvciA9IHJlcXVpcmUoXCIuL3ByZXByb2Nlc3NvclwiKTtcblxuLy8gTGljZW5zZWQgdG8gdGhlIFNvZnR3YXJlIEZyZWVkb20gQ29uc2VydmFuY3kgKFNGQykgdW5kZXIgb25lXG4vLyBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbi8vIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBTRkMgbGljZW5zZXMgdGhpcyBmaWxlXG4vLyB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4vLyBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbi8vIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuLy8gS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4vLyBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cbmZ1bmN0aW9uIHJlZ2lzdGVyQ29tbWFuZEVtaXR0ZXIoe1xuICBjb21tYW5kLFxuICBlbWl0dGVyLFxuICBlbWl0dGVyc1xufSA9IHt9KSB7XG4gIGlmICghZW1pdHRlcnNbY29tbWFuZF0pIHtcbiAgICBlbWl0dGVyc1tjb21tYW5kXSA9IGVtaXR0ZXI7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmFibGUgdG8gb3ZlcndyaXRlIGFuIGV4aXN0aW5nIGNvbW1hbmQgZW1pdHRlcicpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyUHJlcHJvY2Vzc29ycyhlbWl0dGVycykge1xuICBPYmplY3Qua2V5cyhlbWl0dGVycykuZm9yRWFjaChlbWl0dGVyID0+IHtcbiAgICBzd2l0Y2ggKGVtaXR0ZXIpIHtcbiAgICAgIGNhc2UgJ3NlbmRLZXlzJzpcbiAgICAgICAgZW1pdHRlcnNbZW1pdHRlcl0udmFsdWVQcmVwcm9jZXNzb3IgPSBfcHJlcHJvY2Vzc29yLmtleXNQcmVwcm9jZXNzb3I7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdydW5TY3JpcHQnOlxuICAgICAgY2FzZSAnZXhlY3V0ZVNjcmlwdCc6XG4gICAgICBjYXNlICdleGVjdXRlQXN5bmNTY3JpcHQnOlxuICAgICAgY2FzZSAnaWYnOlxuICAgICAgY2FzZSAnZWxzZUlmJzpcbiAgICAgIGNhc2UgJ3JlcGVhdElmJzpcbiAgICAgIGNhc2UgJ3doaWxlJzpcbiAgICAgICAgZW1pdHRlcnNbZW1pdHRlcl0udGFyZ2V0UHJlcHJvY2Vzc29yID0gX3ByZXByb2Nlc3Nvci5zY3JpcHRQcmVwcm9jZXNzb3I7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfSk7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVyTWV0aG9kKG5hbWUsIHJlc3VsdCwge1xuICBnZW5lcmF0ZU1ldGhvZERlY2xhcmF0aW9uLFxuICBob29rc1xufSkge1xuICBsZXQgbWV0aG9kRGVjbGFyYXRpb24gPSBnZW5lcmF0ZU1ldGhvZERlY2xhcmF0aW9uKG5hbWUpO1xuICBtZXRob2REZWNsYXJhdGlvbiA9IHR5cGVvZiBtZXRob2REZWNsYXJhdGlvbiA9PT0gJ29iamVjdCcgPyBtZXRob2REZWNsYXJhdGlvbi5ib2R5IDogbWV0aG9kRGVjbGFyYXRpb247XG5cbiAgaWYgKCEoYXdhaXQgaG9va3MuZGVjbGFyZU1ldGhvZHMuaXNSZWdpc3RlcmVkKG1ldGhvZERlY2xhcmF0aW9uKSkpIHtcbiAgICByZXN1bHQuZm9yRWFjaChzdGF0ZW1lbnQgPT4ge1xuICAgICAgaG9va3MuZGVjbGFyZU1ldGhvZHMucmVnaXN0ZXIoKCkgPT4ge1xuICAgICAgICByZXR1cm4gc3RhdGVtZW50O1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAvbW50L2MveWMvaW5zdGFudGFwaS9zZWxlbml1bS1pZGUvcGFja2FnZXMvc2lkZS11dGlscy9kaXN0L2NvZGUtZXhwb3J0L3JlZ2lzdGVyLmpzXG4vLyBtb2R1bGUgaWQgPSA1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiA0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///55\n");

/***/ }),

/***/ 56:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findReusedTestMethods = findReusedTestMethods;\nexports.findCommandThatOpensWindow = findCommandThatOpensWindow;\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nfunction findReusedTestMethods(test, tests, _results) {\n  const results = _results ? _results : [];\n\n  for (const command of test.commands) {\n    if (command.command === 'run') {\n      const reusedTest = tests.find(test => test.name === command.target);\n      results.push({\n        name: reusedTest.name,\n        commands: reusedTest.commands\n      });\n      return findReusedTestMethods(reusedTest, tests, results);\n    }\n  }\n\n  return results;\n}\n\nfunction findCommandThatOpensWindow(test, tests) {\n  let result;\n\n  for (const command of test.commands) {\n    if (command.opensWindow) {\n      result = command;\n      break;\n    }\n\n    if (command.command === 'run') {\n      const nestedTests = findReusedTestMethods(test, tests);\n\n      for (const nestedTest in nestedTests) {\n        return findCommandThatOpensWindow(nestedTests[nestedTest], nestedTests);\n      }\n    }\n  }\n\n  return result;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9maW5kLmpzPzJjYzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZpbmRSZXVzZWRUZXN0TWV0aG9kcyA9IGZpbmRSZXVzZWRUZXN0TWV0aG9kcztcbmV4cG9ydHMuZmluZENvbW1hbmRUaGF0T3BlbnNXaW5kb3cgPSBmaW5kQ29tbWFuZFRoYXRPcGVuc1dpbmRvdztcblxuLy8gTGljZW5zZWQgdG8gdGhlIFNvZnR3YXJlIEZyZWVkb20gQ29uc2VydmFuY3kgKFNGQykgdW5kZXIgb25lXG4vLyBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbi8vIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBTRkMgbGljZW5zZXMgdGhpcyBmaWxlXG4vLyB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4vLyBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbi8vIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuLy8gS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4vLyBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cbmZ1bmN0aW9uIGZpbmRSZXVzZWRUZXN0TWV0aG9kcyh0ZXN0LCB0ZXN0cywgX3Jlc3VsdHMpIHtcbiAgY29uc3QgcmVzdWx0cyA9IF9yZXN1bHRzID8gX3Jlc3VsdHMgOiBbXTtcblxuICBmb3IgKGNvbnN0IGNvbW1hbmQgb2YgdGVzdC5jb21tYW5kcykge1xuICAgIGlmIChjb21tYW5kLmNvbW1hbmQgPT09ICdydW4nKSB7XG4gICAgICBjb25zdCByZXVzZWRUZXN0ID0gdGVzdHMuZmluZCh0ZXN0ID0+IHRlc3QubmFtZSA9PT0gY29tbWFuZC50YXJnZXQpO1xuICAgICAgcmVzdWx0cy5wdXNoKHtcbiAgICAgICAgbmFtZTogcmV1c2VkVGVzdC5uYW1lLFxuICAgICAgICBjb21tYW5kczogcmV1c2VkVGVzdC5jb21tYW5kc1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gZmluZFJldXNlZFRlc3RNZXRob2RzKHJldXNlZFRlc3QsIHRlc3RzLCByZXN1bHRzKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0cztcbn1cblxuZnVuY3Rpb24gZmluZENvbW1hbmRUaGF0T3BlbnNXaW5kb3codGVzdCwgdGVzdHMpIHtcbiAgbGV0IHJlc3VsdDtcblxuICBmb3IgKGNvbnN0IGNvbW1hbmQgb2YgdGVzdC5jb21tYW5kcykge1xuICAgIGlmIChjb21tYW5kLm9wZW5zV2luZG93KSB7XG4gICAgICByZXN1bHQgPSBjb21tYW5kO1xuICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKGNvbW1hbmQuY29tbWFuZCA9PT0gJ3J1bicpIHtcbiAgICAgIGNvbnN0IG5lc3RlZFRlc3RzID0gZmluZFJldXNlZFRlc3RNZXRob2RzKHRlc3QsIHRlc3RzKTtcblxuICAgICAgZm9yIChjb25zdCBuZXN0ZWRUZXN0IGluIG5lc3RlZFRlc3RzKSB7XG4gICAgICAgIHJldHVybiBmaW5kQ29tbWFuZFRoYXRPcGVuc1dpbmRvdyhuZXN0ZWRUZXN0c1tuZXN0ZWRUZXN0XSwgbmVzdGVkVGVzdHMpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9maW5kLmpzXG4vLyBtb2R1bGUgaWQgPSA1NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiA0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n");

/***/ }),

/***/ 57:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArgTypes = void 0;\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst ArgTypes = {\n  alertText: {\n    name: 'alert text',\n    description: 'text to check'\n  },\n  answer: {\n    name: 'answer',\n    description: 'The answer to give in response to the prompt pop-up.'\n  },\n  attributeLocator: {\n    name: 'attribute locator',\n    description: `An element locator followed by an @ sign and then the name of \n    the attribute, e.g. \"foo@bar\".`\n  },\n  arrayVariableName: {\n    name: 'array variable name',\n    description: 'The name of a variable containing a JavaScript array.'\n  },\n  conditionalExpression: {\n    name: 'conditional expression',\n    description: `JavaScript expression that returns a boolean result for use \n    in control flow commands.`\n  },\n  coord: {\n    name: 'coord string',\n    description: `Specifies the x,y position (e.g., - 10,20) of the mouse event \n    relative to the element found from a locator.`\n  },\n  expectedValue: {\n    name: 'expected value',\n    description: `The result you expect a variable to contain (e.g., true, false, \n    or some other value).`\n  },\n  expression: {\n    name: 'expression',\n    description: \"The value you'd like to store.\"\n  },\n  formLocator: {\n    name: 'form locator',\n    description: `An element locator for the form you want to submit.`\n  },\n  handle: {\n    name: 'window handle',\n    description: `A handle representing a specific page (tab, or window).`\n  },\n  iteratorVariableName: {\n    name: 'iterator variable name',\n    description: `The name of the variable used when iterating over a collection in a looping control flow command (e.g., for each).`\n  },\n  json: {\n    name: 'json',\n    description: `A string representation of a JavaScript object.`\n  },\n  keySequence: {\n    name: 'key sequence',\n    description: 'A sequence of keys to type, can be used to send key strokes (e.g. ${KEY_ENTER}).'\n  },\n  locator: {\n    name: 'locator',\n    description: 'An element locator.'\n  },\n  locatorOfDragDestinationObject: {\n    name: 'locator of drag destination object',\n    description: `The locator of an element whose location (e.g., the center-most \n    pixel within it) will be the point where locator of object to be dragged is \n    dropped.`\n  },\n  locatorOfObjectToBeDragged: {\n    name: 'locator of object to be dragged',\n    description: 'The locator of element to be dragged.'\n  },\n  loopLimit: {\n    name: 'loop limit',\n    description: `An optional argument that specifies the maximum number of times a looping control flow command can execute. This protects against infinite loops. The defaults value is set to 1000.`,\n    isOptional: true\n  },\n  message: {\n    name: 'message',\n    description: 'The message to print.'\n  },\n  optionLocator: {\n    name: 'option',\n    description: 'An option locator, typically just an option label (e.g. \"John Smith\").'\n  },\n  optionalFlag: {\n    name: 'optional flag',\n    description: `Specify a configuration option to alter the command's behavior (e.g., --disable-assertions for the run command).`,\n    isOptional: true\n  },\n  pattern: {\n    name: 'text',\n    description: `An exact string match. Support for pattern matching is in the \n    works. See https://github.com/SeleniumHQ/selenium-ide/issues/141 for details.`\n  },\n  region: {\n    name: 'region',\n    description: `Specify a rectangle with coordinates and lengths (e.g., \"x: 257, \n    y: 300, width: 462, height: 280\").`\n  },\n  resolution: {\n    name: 'resolution',\n    description: `Specify a window resolution using WidthxHeight. (e.g., 1280x800).`\n  },\n  script: {\n    name: 'script',\n    description: 'The JavaScript snippet to run.'\n  },\n  selectLocator: {\n    name: 'select locator',\n    description: 'An element locator identifying a drop-down menu.'\n  },\n  testCase: {\n    name: 'test case',\n    description: 'Test case name from the project.'\n  },\n  text: {\n    name: 'text',\n    description: 'The text to use.'\n  },\n  times: {\n    name: 'times',\n    description: `The number of attempts a times control flow loop will execute \n    the commands within its block.`\n  },\n  url: {\n    name: 'url',\n    description: 'The URL to open (may be relative or absolute).'\n  },\n  value: {\n    name: 'value',\n    description: 'The value to input.'\n  },\n  variableName: {\n    name: 'variable name',\n    description: `The name of a variable without brackets.`\n  },\n  waitTime: {\n    name: 'wait time',\n    description: 'The amount of time to wait (in milliseconds).'\n  },\n  xpath: {\n    name: 'xpath',\n    description: 'The xpath expression to evaluate.'\n  }\n};\nexports.ArgTypes = ArgTypes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtbW9kZWwvZGlzdC9jb21tYW5kL0FyZ1R5cGVzLmpzPzM4MjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkFyZ1R5cGVzID0gdm9pZCAwO1xuLy8gTGljZW5zZWQgdG8gdGhlIFNvZnR3YXJlIEZyZWVkb20gQ29uc2VydmFuY3kgKFNGQykgdW5kZXIgb25lXG4vLyBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbi8vIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBTRkMgbGljZW5zZXMgdGhpcyBmaWxlXG4vLyB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4vLyBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbi8vIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuLy8gS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4vLyBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cbmNvbnN0IEFyZ1R5cGVzID0ge1xuICBhbGVydFRleHQ6IHtcbiAgICBuYW1lOiAnYWxlcnQgdGV4dCcsXG4gICAgZGVzY3JpcHRpb246ICd0ZXh0IHRvIGNoZWNrJ1xuICB9LFxuICBhbnN3ZXI6IHtcbiAgICBuYW1lOiAnYW5zd2VyJyxcbiAgICBkZXNjcmlwdGlvbjogJ1RoZSBhbnN3ZXIgdG8gZ2l2ZSBpbiByZXNwb25zZSB0byB0aGUgcHJvbXB0IHBvcC11cC4nXG4gIH0sXG4gIGF0dHJpYnV0ZUxvY2F0b3I6IHtcbiAgICBuYW1lOiAnYXR0cmlidXRlIGxvY2F0b3InLFxuICAgIGRlc2NyaXB0aW9uOiBgQW4gZWxlbWVudCBsb2NhdG9yIGZvbGxvd2VkIGJ5IGFuIEAgc2lnbiBhbmQgdGhlbiB0aGUgbmFtZSBvZiBcbiAgICB0aGUgYXR0cmlidXRlLCBlLmcuIFwiZm9vQGJhclwiLmBcbiAgfSxcbiAgYXJyYXlWYXJpYWJsZU5hbWU6IHtcbiAgICBuYW1lOiAnYXJyYXkgdmFyaWFibGUgbmFtZScsXG4gICAgZGVzY3JpcHRpb246ICdUaGUgbmFtZSBvZiBhIHZhcmlhYmxlIGNvbnRhaW5pbmcgYSBKYXZhU2NyaXB0IGFycmF5LidcbiAgfSxcbiAgY29uZGl0aW9uYWxFeHByZXNzaW9uOiB7XG4gICAgbmFtZTogJ2NvbmRpdGlvbmFsIGV4cHJlc3Npb24nLFxuICAgIGRlc2NyaXB0aW9uOiBgSmF2YVNjcmlwdCBleHByZXNzaW9uIHRoYXQgcmV0dXJucyBhIGJvb2xlYW4gcmVzdWx0IGZvciB1c2UgXG4gICAgaW4gY29udHJvbCBmbG93IGNvbW1hbmRzLmBcbiAgfSxcbiAgY29vcmQ6IHtcbiAgICBuYW1lOiAnY29vcmQgc3RyaW5nJyxcbiAgICBkZXNjcmlwdGlvbjogYFNwZWNpZmllcyB0aGUgeCx5IHBvc2l0aW9uIChlLmcuLCAtIDEwLDIwKSBvZiB0aGUgbW91c2UgZXZlbnQgXG4gICAgcmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQgZm91bmQgZnJvbSBhIGxvY2F0b3IuYFxuICB9LFxuICBleHBlY3RlZFZhbHVlOiB7XG4gICAgbmFtZTogJ2V4cGVjdGVkIHZhbHVlJyxcbiAgICBkZXNjcmlwdGlvbjogYFRoZSByZXN1bHQgeW91IGV4cGVjdCBhIHZhcmlhYmxlIHRvIGNvbnRhaW4gKGUuZy4sIHRydWUsIGZhbHNlLCBcbiAgICBvciBzb21lIG90aGVyIHZhbHVlKS5gXG4gIH0sXG4gIGV4cHJlc3Npb246IHtcbiAgICBuYW1lOiAnZXhwcmVzc2lvbicsXG4gICAgZGVzY3JpcHRpb246IFwiVGhlIHZhbHVlIHlvdSdkIGxpa2UgdG8gc3RvcmUuXCJcbiAgfSxcbiAgZm9ybUxvY2F0b3I6IHtcbiAgICBuYW1lOiAnZm9ybSBsb2NhdG9yJyxcbiAgICBkZXNjcmlwdGlvbjogYEFuIGVsZW1lbnQgbG9jYXRvciBmb3IgdGhlIGZvcm0geW91IHdhbnQgdG8gc3VibWl0LmBcbiAgfSxcbiAgaGFuZGxlOiB7XG4gICAgbmFtZTogJ3dpbmRvdyBoYW5kbGUnLFxuICAgIGRlc2NyaXB0aW9uOiBgQSBoYW5kbGUgcmVwcmVzZW50aW5nIGEgc3BlY2lmaWMgcGFnZSAodGFiLCBvciB3aW5kb3cpLmBcbiAgfSxcbiAgaXRlcmF0b3JWYXJpYWJsZU5hbWU6IHtcbiAgICBuYW1lOiAnaXRlcmF0b3IgdmFyaWFibGUgbmFtZScsXG4gICAgZGVzY3JpcHRpb246IGBUaGUgbmFtZSBvZiB0aGUgdmFyaWFibGUgdXNlZCB3aGVuIGl0ZXJhdGluZyBvdmVyIGEgY29sbGVjdGlvbiBpbiBhIGxvb3BpbmcgY29udHJvbCBmbG93IGNvbW1hbmQgKGUuZy4sIGZvciBlYWNoKS5gXG4gIH0sXG4gIGpzb246IHtcbiAgICBuYW1lOiAnanNvbicsXG4gICAgZGVzY3JpcHRpb246IGBBIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBhIEphdmFTY3JpcHQgb2JqZWN0LmBcbiAgfSxcbiAga2V5U2VxdWVuY2U6IHtcbiAgICBuYW1lOiAna2V5IHNlcXVlbmNlJyxcbiAgICBkZXNjcmlwdGlvbjogJ0Egc2VxdWVuY2Ugb2Yga2V5cyB0byB0eXBlLCBjYW4gYmUgdXNlZCB0byBzZW5kIGtleSBzdHJva2VzIChlLmcuICR7S0VZX0VOVEVSfSkuJ1xuICB9LFxuICBsb2NhdG9yOiB7XG4gICAgbmFtZTogJ2xvY2F0b3InLFxuICAgIGRlc2NyaXB0aW9uOiAnQW4gZWxlbWVudCBsb2NhdG9yLidcbiAgfSxcbiAgbG9jYXRvck9mRHJhZ0Rlc3RpbmF0aW9uT2JqZWN0OiB7XG4gICAgbmFtZTogJ2xvY2F0b3Igb2YgZHJhZyBkZXN0aW5hdGlvbiBvYmplY3QnLFxuICAgIGRlc2NyaXB0aW9uOiBgVGhlIGxvY2F0b3Igb2YgYW4gZWxlbWVudCB3aG9zZSBsb2NhdGlvbiAoZS5nLiwgdGhlIGNlbnRlci1tb3N0IFxuICAgIHBpeGVsIHdpdGhpbiBpdCkgd2lsbCBiZSB0aGUgcG9pbnQgd2hlcmUgbG9jYXRvciBvZiBvYmplY3QgdG8gYmUgZHJhZ2dlZCBpcyBcbiAgICBkcm9wcGVkLmBcbiAgfSxcbiAgbG9jYXRvck9mT2JqZWN0VG9CZURyYWdnZWQ6IHtcbiAgICBuYW1lOiAnbG9jYXRvciBvZiBvYmplY3QgdG8gYmUgZHJhZ2dlZCcsXG4gICAgZGVzY3JpcHRpb246ICdUaGUgbG9jYXRvciBvZiBlbGVtZW50IHRvIGJlIGRyYWdnZWQuJ1xuICB9LFxuICBsb29wTGltaXQ6IHtcbiAgICBuYW1lOiAnbG9vcCBsaW1pdCcsXG4gICAgZGVzY3JpcHRpb246IGBBbiBvcHRpb25hbCBhcmd1bWVudCB0aGF0IHNwZWNpZmllcyB0aGUgbWF4aW11bSBudW1iZXIgb2YgdGltZXMgYSBsb29waW5nIGNvbnRyb2wgZmxvdyBjb21tYW5kIGNhbiBleGVjdXRlLiBUaGlzIHByb3RlY3RzIGFnYWluc3QgaW5maW5pdGUgbG9vcHMuIFRoZSBkZWZhdWx0cyB2YWx1ZSBpcyBzZXQgdG8gMTAwMC5gLFxuICAgIGlzT3B0aW9uYWw6IHRydWVcbiAgfSxcbiAgbWVzc2FnZToge1xuICAgIG5hbWU6ICdtZXNzYWdlJyxcbiAgICBkZXNjcmlwdGlvbjogJ1RoZSBtZXNzYWdlIHRvIHByaW50LidcbiAgfSxcbiAgb3B0aW9uTG9jYXRvcjoge1xuICAgIG5hbWU6ICdvcHRpb24nLFxuICAgIGRlc2NyaXB0aW9uOiAnQW4gb3B0aW9uIGxvY2F0b3IsIHR5cGljYWxseSBqdXN0IGFuIG9wdGlvbiBsYWJlbCAoZS5nLiBcIkpvaG4gU21pdGhcIikuJ1xuICB9LFxuICBvcHRpb25hbEZsYWc6IHtcbiAgICBuYW1lOiAnb3B0aW9uYWwgZmxhZycsXG4gICAgZGVzY3JpcHRpb246IGBTcGVjaWZ5IGEgY29uZmlndXJhdGlvbiBvcHRpb24gdG8gYWx0ZXIgdGhlIGNvbW1hbmQncyBiZWhhdmlvciAoZS5nLiwgLS1kaXNhYmxlLWFzc2VydGlvbnMgZm9yIHRoZSBydW4gY29tbWFuZCkuYCxcbiAgICBpc09wdGlvbmFsOiB0cnVlXG4gIH0sXG4gIHBhdHRlcm46IHtcbiAgICBuYW1lOiAndGV4dCcsXG4gICAgZGVzY3JpcHRpb246IGBBbiBleGFjdCBzdHJpbmcgbWF0Y2guIFN1cHBvcnQgZm9yIHBhdHRlcm4gbWF0Y2hpbmcgaXMgaW4gdGhlIFxuICAgIHdvcmtzLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL1NlbGVuaXVtSFEvc2VsZW5pdW0taWRlL2lzc3Vlcy8xNDEgZm9yIGRldGFpbHMuYFxuICB9LFxuICByZWdpb246IHtcbiAgICBuYW1lOiAncmVnaW9uJyxcbiAgICBkZXNjcmlwdGlvbjogYFNwZWNpZnkgYSByZWN0YW5nbGUgd2l0aCBjb29yZGluYXRlcyBhbmQgbGVuZ3RocyAoZS5nLiwgXCJ4OiAyNTcsIFxuICAgIHk6IDMwMCwgd2lkdGg6IDQ2MiwgaGVpZ2h0OiAyODBcIikuYFxuICB9LFxuICByZXNvbHV0aW9uOiB7XG4gICAgbmFtZTogJ3Jlc29sdXRpb24nLFxuICAgIGRlc2NyaXB0aW9uOiBgU3BlY2lmeSBhIHdpbmRvdyByZXNvbHV0aW9uIHVzaW5nIFdpZHRoeEhlaWdodC4gKGUuZy4sIDEyODB4ODAwKS5gXG4gIH0sXG4gIHNjcmlwdDoge1xuICAgIG5hbWU6ICdzY3JpcHQnLFxuICAgIGRlc2NyaXB0aW9uOiAnVGhlIEphdmFTY3JpcHQgc25pcHBldCB0byBydW4uJ1xuICB9LFxuICBzZWxlY3RMb2NhdG9yOiB7XG4gICAgbmFtZTogJ3NlbGVjdCBsb2NhdG9yJyxcbiAgICBkZXNjcmlwdGlvbjogJ0FuIGVsZW1lbnQgbG9jYXRvciBpZGVudGlmeWluZyBhIGRyb3AtZG93biBtZW51LidcbiAgfSxcbiAgdGVzdENhc2U6IHtcbiAgICBuYW1lOiAndGVzdCBjYXNlJyxcbiAgICBkZXNjcmlwdGlvbjogJ1Rlc3QgY2FzZSBuYW1lIGZyb20gdGhlIHByb2plY3QuJ1xuICB9LFxuICB0ZXh0OiB7XG4gICAgbmFtZTogJ3RleHQnLFxuICAgIGRlc2NyaXB0aW9uOiAnVGhlIHRleHQgdG8gdXNlLidcbiAgfSxcbiAgdGltZXM6IHtcbiAgICBuYW1lOiAndGltZXMnLFxuICAgIGRlc2NyaXB0aW9uOiBgVGhlIG51bWJlciBvZiBhdHRlbXB0cyBhIHRpbWVzIGNvbnRyb2wgZmxvdyBsb29wIHdpbGwgZXhlY3V0ZSBcbiAgICB0aGUgY29tbWFuZHMgd2l0aGluIGl0cyBibG9jay5gXG4gIH0sXG4gIHVybDoge1xuICAgIG5hbWU6ICd1cmwnLFxuICAgIGRlc2NyaXB0aW9uOiAnVGhlIFVSTCB0byBvcGVuIChtYXkgYmUgcmVsYXRpdmUgb3IgYWJzb2x1dGUpLidcbiAgfSxcbiAgdmFsdWU6IHtcbiAgICBuYW1lOiAndmFsdWUnLFxuICAgIGRlc2NyaXB0aW9uOiAnVGhlIHZhbHVlIHRvIGlucHV0LidcbiAgfSxcbiAgdmFyaWFibGVOYW1lOiB7XG4gICAgbmFtZTogJ3ZhcmlhYmxlIG5hbWUnLFxuICAgIGRlc2NyaXB0aW9uOiBgVGhlIG5hbWUgb2YgYSB2YXJpYWJsZSB3aXRob3V0IGJyYWNrZXRzLmBcbiAgfSxcbiAgd2FpdFRpbWU6IHtcbiAgICBuYW1lOiAnd2FpdCB0aW1lJyxcbiAgICBkZXNjcmlwdGlvbjogJ1RoZSBhbW91bnQgb2YgdGltZSB0byB3YWl0IChpbiBtaWxsaXNlY29uZHMpLidcbiAgfSxcbiAgeHBhdGg6IHtcbiAgICBuYW1lOiAneHBhdGgnLFxuICAgIGRlc2NyaXB0aW9uOiAnVGhlIHhwYXRoIGV4cHJlc3Npb24gdG8gZXZhbHVhdGUuJ1xuICB9XG59O1xuZXhwb3J0cy5BcmdUeXBlcyA9IEFyZ1R5cGVzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC9tbnQvYy95Yy9pbnN0YW50YXBpL3NlbGVuaXVtLWlkZS9wYWNrYWdlcy9zaWRlLW1vZGVsL2Rpc3QvY29tbWFuZC9BcmdUeXBlcy5qc1xuLy8gbW9kdWxlIGlkID0gNTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgNCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///57\n");

/***/ }),

/***/ 7:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _codeExport = _interopRequireDefault(__webpack_require__(92));\n\nvar _stringEscape = _interopRequireDefault(__webpack_require__(36));\n\nvar _userAgent = _interopRequireDefault(__webpack_require__(97));\n\nvar _environment = _interopRequireDefault(__webpack_require__(99));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nmodule.exports = {\n  codeExport: _codeExport.default,\n  stringEscape: _stringEscape.default,\n  userAgent: _userAgent.default,\n  environment: _environment.default\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vbW50L2MveWMvaW5zdGFudGFwaS9zZWxlbml1bS1pZGUvcGFja2FnZXMvc2lkZS11dGlscy9kaXN0L2luZGV4LmpzPzY3YTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfY29kZUV4cG9ydCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vY29kZS1leHBvcnRcIikpO1xuXG52YXIgX3N0cmluZ0VzY2FwZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc3RyaW5nLWVzY2FwZVwiKSk7XG5cbnZhciBfdXNlckFnZW50ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91c2VyLWFnZW50XCIpKTtcblxudmFyIF9lbnZpcm9ubWVudCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vZW52aXJvbm1lbnRcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBMaWNlbnNlZCB0byB0aGUgU29mdHdhcmUgRnJlZWRvbSBDb25zZXJ2YW5jeSAoU0ZDKSB1bmRlciBvbmVcbi8vIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuLy8gZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbi8vIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIFNGQyBsaWNlbnNlcyB0aGlzIGZpbGVcbi8vIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbi8vIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuLy8gd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuLy8gc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbi8vIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4vLyBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbi8vIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbi8vIHVuZGVyIHRoZSBMaWNlbnNlLlxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNvZGVFeHBvcnQ6IF9jb2RlRXhwb3J0LmRlZmF1bHQsXG4gIHN0cmluZ0VzY2FwZTogX3N0cmluZ0VzY2FwZS5kZWZhdWx0LFxuICB1c2VyQWdlbnQ6IF91c2VyQWdlbnQuZGVmYXVsdCxcbiAgZW52aXJvbm1lbnQ6IF9lbnZpcm9ubWVudC5kZWZhdWx0XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC9tbnQvYy95Yy9pbnN0YW50YXBpL3NlbGVuaXVtLWlkZS9wYWNrYWdlcy9zaWRlLXV0aWxzL2Rpc3QvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgNCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n");

/***/ }),

/***/ 75:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerCommand = exports.ArgTypes = exports.TargetTypes = exports.Commands = void 0;\n\nvar _Commands = __webpack_require__(94);\n\nvar _ArgTypes = __webpack_require__(57);\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst Commands = _Commands.Commands;\nexports.Commands = Commands;\nconst TargetTypes = _Commands.TargetTypes;\nexports.TargetTypes = TargetTypes;\nconst ArgTypes = _ArgTypes.ArgTypes;\nexports.ArgTypes = ArgTypes;\nconst registerCommand = _Commands.registerCommand;\nexports.registerCommand = registerCommand;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtbW9kZWwvZGlzdC9pbmRleC5qcz8yMzhmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5yZWdpc3RlckNvbW1hbmQgPSBleHBvcnRzLkFyZ1R5cGVzID0gZXhwb3J0cy5UYXJnZXRUeXBlcyA9IGV4cG9ydHMuQ29tbWFuZHMgPSB2b2lkIDA7XG5cbnZhciBfQ29tbWFuZHMgPSByZXF1aXJlKFwiLi9jb21tYW5kL0NvbW1hbmRzXCIpO1xuXG52YXIgX0FyZ1R5cGVzID0gcmVxdWlyZShcIi4vY29tbWFuZC9BcmdUeXBlc1wiKTtcblxuLy8gTGljZW5zZWQgdG8gdGhlIFNvZnR3YXJlIEZyZWVkb20gQ29uc2VydmFuY3kgKFNGQykgdW5kZXIgb25lXG4vLyBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbi8vIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBTRkMgbGljZW5zZXMgdGhpcyBmaWxlXG4vLyB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4vLyBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbi8vIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuLy8gS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4vLyBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cbmNvbnN0IENvbW1hbmRzID0gX0NvbW1hbmRzLkNvbW1hbmRzO1xuZXhwb3J0cy5Db21tYW5kcyA9IENvbW1hbmRzO1xuY29uc3QgVGFyZ2V0VHlwZXMgPSBfQ29tbWFuZHMuVGFyZ2V0VHlwZXM7XG5leHBvcnRzLlRhcmdldFR5cGVzID0gVGFyZ2V0VHlwZXM7XG5jb25zdCBBcmdUeXBlcyA9IF9BcmdUeXBlcy5BcmdUeXBlcztcbmV4cG9ydHMuQXJnVHlwZXMgPSBBcmdUeXBlcztcbmNvbnN0IHJlZ2lzdGVyQ29tbWFuZCA9IF9Db21tYW5kcy5yZWdpc3RlckNvbW1hbmQ7XG5leHBvcnRzLnJlZ2lzdGVyQ29tbWFuZCA9IHJlZ2lzdGVyQ29tbWFuZDtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAvbW50L2MveWMvaW5zdGFudGFwaS9zZWxlbml1bS1pZGUvcGFja2FnZXMvc2lkZS1tb2RlbC9kaXN0L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSA3NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiA0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///75\n");

/***/ }),

/***/ 92:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _emit = _interopRequireDefault(__webpack_require__(93));\n\nvar _prettify = _interopRequireDefault(__webpack_require__(54));\n\nvar _register = __webpack_require__(55);\n\nvar _hook = _interopRequireDefault(__webpack_require__(95));\n\nvar _find = _interopRequireDefault(__webpack_require__(56));\n\nvar _render = _interopRequireDefault(__webpack_require__(53));\n\nvar _parsers = _interopRequireDefault(__webpack_require__(96));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar _default = {\n  emit: _objectSpread2({}, _emit.default),\n  prettify: _prettify.default,\n  register: {\n    preprocessors: _register.registerPreprocessors,\n    emitter: _register.registerCommandEmitter\n  },\n  hook: _hook.default,\n  find: _objectSpread2({}, _find.default),\n  render: _render.default,\n  parsers: _parsers.default\n};\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9pbmRleC5qcz9iMWVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG52YXIgX2VtaXQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2VtaXRcIikpO1xuXG52YXIgX3ByZXR0aWZ5ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9wcmV0dGlmeVwiKSk7XG5cbnZhciBfcmVnaXN0ZXIgPSByZXF1aXJlKFwiLi9yZWdpc3RlclwiKTtcblxudmFyIF9ob29rID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9ob29rXCIpKTtcblxudmFyIF9maW5kID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9maW5kXCIpKTtcblxudmFyIF9yZW5kZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3JlbmRlclwiKSk7XG5cbnZhciBfcGFyc2VycyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vcGFyc2Vyc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQyKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpOyBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHsgb3duS2V5cyA9IG93bktleXMuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKS5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIHN5bSkuZW51bWVyYWJsZTsgfSkpOyB9IG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBfZGVmYXVsdCA9IHtcbiAgZW1pdDogX29iamVjdFNwcmVhZDIoe30sIF9lbWl0LmRlZmF1bHQpLFxuICBwcmV0dGlmeTogX3ByZXR0aWZ5LmRlZmF1bHQsXG4gIHJlZ2lzdGVyOiB7XG4gICAgcHJlcHJvY2Vzc29yczogX3JlZ2lzdGVyLnJlZ2lzdGVyUHJlcHJvY2Vzc29ycyxcbiAgICBlbWl0dGVyOiBfcmVnaXN0ZXIucmVnaXN0ZXJDb21tYW5kRW1pdHRlclxuICB9LFxuICBob29rOiBfaG9vay5kZWZhdWx0LFxuICBmaW5kOiBfb2JqZWN0U3ByZWFkMih7fSwgX2ZpbmQuZGVmYXVsdCksXG4gIHJlbmRlcjogX3JlbmRlci5kZWZhdWx0LFxuICBwYXJzZXJzOiBfcGFyc2Vycy5kZWZhdWx0XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gOTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgNCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///92\n");

/***/ }),

/***/ 93:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.emitCommand = emitCommand;\nexports.emitLocation = emitLocation;\nexports.emitSelection = emitSelection;\nexports.emitOriginTracing = emitOriginTracing;\nexports.default = void 0;\n\nvar _stringEscape = _interopRequireDefault(__webpack_require__(36));\n\nvar _preprocessor = __webpack_require__(52);\n\nvar _render = _interopRequireDefault(__webpack_require__(53));\n\nvar _register = __webpack_require__(55);\n\nvar _find = __webpack_require__(56);\n\nvar _sideModel = __webpack_require__(75);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction validateCommand(command) {\n  const commandName = command.command;\n\n  if (!commandName.startsWith('//')) {\n    let commandSchema = _sideModel.Commands.find(cmdObj => cmdObj[0] === commandName);\n\n    if (commandSchema) commandSchema = commandSchema[1];else throw new Error(`Invalid command '${commandName}'`);\n\n    if (!!commandSchema.target !== !!command.target) {\n      const isOptional = !!commandSchema.target.isOptional;\n\n      if (!isOptional) {\n        throw new Error(`Incomplete command '${command.command}'. Missing expected target argument.`);\n      }\n    }\n\n    if (!!commandSchema.value !== !!command.value) {\n      const isOptional = !!commandSchema.value.isOptional;\n\n      if (!isOptional) {\n        throw new Error(`Incomplete command '${commandName}'. Missing expected value argument.`);\n      }\n    }\n  }\n}\n\nfunction emitCommand(command, emitter, {\n  variableLookup,\n  emitNewWindowHandling\n} = {}) {\n  validateCommand(command);\n\n  if (emitter) {\n    const ignoreEscaping = command.command === 'storeJson';\n    let result = emitter((0, _preprocessor.preprocessParameter)(command.target, emitter.targetPreprocessor, variableLookup, {\n      ignoreEscaping\n    }), (0, _preprocessor.preprocessParameter)(command.value, emitter.valuePreprocessor, variableLookup, {\n      ignoreEscaping\n    }));\n    if (command.opensWindow) result = emitNewWindowHandling(command, result);\n    return result;\n  }\n}\n\nfunction emitLocation(location, emitters) {\n  if (/^\\/\\//.test(location)) {\n    return emitters.xpath(location);\n  }\n\n  const fragments = location.split('=');\n  const type = fragments.shift();\n  const selector = fragments.join('=');\n\n  if (emitters[type]) {\n    return emitters[type](selector);\n  } else {\n    throw new Error(type ? `Unknown locator ${type}` : \"Locator can't be empty\");\n  }\n}\n\nfunction emitSelection(location, emitters) {\n  if (!location) throw new Error(`Location can't be empty`);\n  const [type, selector] = location.split('=');\n\n  if (emitters[type] && selector) {\n    let result = emitters[type](selector);\n    return result;\n  } else if (!selector) {\n    // no selector strategy given, assuming label\n    return emitters['label'](type);\n  } else {\n    throw new Error(`Unknown selection locator ${type}`);\n  }\n}\n\nasync function emitCommands(commands, emitter) {\n  const _commands = commands.map(command => {\n    return emitter.emit(command);\n  });\n\n  const emittedCommands = await Promise.all(_commands);\n  let result = [];\n  emittedCommands.forEach(entry => {\n    if (typeof entry === 'string' && entry.includes('\\n')) {\n      entry.split('\\n').forEach(subEntry => {\n        result.push(subEntry);\n      });\n    } else {\n      result.push(entry);\n    }\n  });\n  return result;\n}\n\nasync function emitMethod(method, {\n  commandPrefixPadding,\n  generateMethodDeclaration,\n  terminatingKeyword,\n  emitter,\n  overrideCommandEmitting\n} = {}) {\n  const methodDeclaration = generateMethodDeclaration(method.name);\n  let _methodDeclaration = methodDeclaration;\n  let _terminatingKeyword = terminatingKeyword;\n\n  if (typeof methodDeclaration === 'object') {\n    _methodDeclaration = methodDeclaration.body;\n    _terminatingKeyword = methodDeclaration.terminatingKeyword;\n  }\n\n  let result;\n\n  if (overrideCommandEmitting) {\n    result = method.commands.map(cmd => `${commandPrefixPadding.repeat(cmd.level) + cmd.statement}`);\n  } else {\n    result = await emitCommands(method.commands, emitter);\n  }\n\n  return [_methodDeclaration, result.join(`\\n${commandPrefixPadding}`).replace(/^/, commandPrefixPadding), _terminatingKeyword];\n}\n\nfunction emitOriginTracing(test, {\n  commentPrefix\n}) {\n  let result = [];\n  result.push(commentPrefix + ` Test name: ${test.name}`);\n  result.push(commentPrefix + ' Step # | name | target | value | comment');\n  test.commands.forEach((command, index) => {\n    result.push(commentPrefix + ` ${index + 1} | ${command.command} | ${command.target} | ${command.value} | ${command.comment}`);\n  });\n  return result;\n}\n\nasync function emitTest(test, tests, {\n  testLevel,\n  commandLevel,\n  testDeclaration,\n  terminatingKeyword,\n  commandPrefixPadding,\n  commentPrefix,\n  hooks,\n  emitter,\n  generateMethodDeclaration,\n  enableOriginTracing,\n  project\n} = {}) {\n  // preamble\n  let result = {};\n  testLevel = testLevel || 1;\n  commandLevel = commandLevel || 2;\n  const methods = (0, _find.findReusedTestMethods)(test, tests);\n\n  const render = _render.default.bind(this, commandPrefixPadding); // handle extra dynamic emitters that aren't tied to an explicit command\n\n\n  if (emitter.extras) {\n    for (const emitter_name in emitter.extras) {\n      let ignore = true;\n      if (emitter_name === 'emitWaitForWindow' && (0, _find.findCommandThatOpensWindow)(test, tests)) ignore = false;\n\n      if (!ignore) {\n        const method = await emitter.extras[emitter_name]();\n        const result = await emitMethod(method, {\n          emitter,\n          commandPrefixPadding,\n          generateMethodDeclaration: method.generateMethodDeclaration,\n          terminatingKeyword,\n          overrideCommandEmitting: true\n        });\n        await (0, _register.registerMethod)(method.name, result, {\n          generateMethodDeclaration: method.generateMethodDeclaration,\n          hooks\n        });\n      }\n    }\n  } // handle reused test methods (e.g., commands that use the `run` command)\n\n\n  for (const method of methods) {\n    const result = await emitMethod(method, {\n      emitter,\n      commandPrefixPadding,\n      generateMethodDeclaration,\n      terminatingKeyword\n    });\n    await (0, _register.registerMethod)(method.name, result, {\n      generateMethodDeclaration,\n      hooks\n    });\n  } // prepare origin tracing code commands if enabled\n\n\n  const originTracing = enableOriginTracing ? emitOriginTracing(test, {\n    commentPrefix\n  }) : undefined; // prepare result object\n\n  result.testDeclaration = render(testDeclaration, {\n    startingLevel: testLevel\n  });\n  result.inEachBegin = render((await hooks.inEachBegin.emit({\n    test,\n    tests,\n    project,\n    isOptional: true\n  })), {\n    startingLevel: commandLevel\n  });\n  result.commands = render((await emitCommands(test.commands, emitter).catch(error => {\n    // prefix test name on error\n    throw new Error(`Test '${test.name}' has a problem: ${error.message}`);\n  })), {\n    startingLevel: commandLevel,\n    originTracing\n  });\n  result.inEachEnd = render((await hooks.inEachEnd.emit({\n    test,\n    tests,\n    project,\n    isOptional: true\n  })), {\n    startingLevel: commandLevel\n  });\n  result.testEnd = render(terminatingKeyword, {\n    startingLevel: testLevel\n  });\n  return result;\n}\n\nasync function emitTestsFromSuite(tests, suite, languageOpts, {\n  enableOriginTracing,\n  generateTestDeclaration,\n  project\n}) {\n  let result = {};\n\n  for (const testName of suite.tests) {\n    const test = tests.find(test => test.name === testName);\n    const testDeclaration = generateTestDeclaration(test.name);\n    result[test.name] = await emitTest(test, tests, _objectSpread2({}, languageOpts, {\n      testDeclaration,\n      enableOriginTracing,\n      project\n    }));\n  }\n\n  return result;\n}\n\nasync function emitSuite(body, tests, {\n  suiteLevel,\n  testLevel,\n  suiteName,\n  suiteDeclaration,\n  terminatingKeyword,\n  commandPrefixPadding,\n  commentPrefix,\n  hooks,\n  suite,\n  project,\n  beforeEachOptions\n} = {}) {\n  // preamble\n  let result = {};\n  testLevel = testLevel || 1;\n  suiteLevel = suiteLevel || 0;\n  if (!suite) suite = {\n    name: suiteName\n  };\n\n  const render = _render.default.bind(this, commandPrefixPadding); // prepare result object\n\n\n  result.headerComment = commentPrefix + ' Generated by Selenium IDE\\n';\n  result.dependencies = render((await hooks.declareDependencies.emit({\n    suite,\n    tests,\n    project\n  })));\n  result.suiteDeclaration = render(suiteDeclaration, {\n    startingLevel: suiteLevel\n  });\n  result.variables = render((await hooks.declareVariables.emit({\n    suite,\n    tests,\n    project\n  })), {\n    startingLevel: testLevel\n  });\n  result.beforeAll = render((await hooks.beforeAll.emit({\n    suite,\n    tests,\n    project,\n    isOptional: true\n  })), {\n    startingLevel: testLevel\n  });\n  result.beforeEach = render((await hooks.beforeEach.emit({\n    suite,\n    tests,\n    project,\n    startingSyntaxOptions: beforeEachOptions\n  })), {\n    startingLevel: testLevel\n  });\n  result.afterEach = render((await hooks.afterEach.emit({\n    suite,\n    tests,\n    project\n  })), {\n    startingLevel: testLevel\n  });\n  result.afterAll = render((await hooks.afterAll.emit({\n    suite,\n    tests,\n    project,\n    isOptional: true\n  })), {\n    startingLevel: testLevel\n  });\n  result.methods = render((await hooks.declareMethods.emit({\n    suite,\n    tests,\n    project,\n    isOptional: true\n  })), {\n    startingLevel: testLevel\n  });\n  result.tests = body;\n  result.suiteEnd = render(terminatingKeyword, {\n    startingLevel: suiteLevel\n  }); // cleanup\n\n  hooks.declareMethods.clearRegister();\n  return result;\n}\n\nfunction emitOrderedSuite(emittedSuite) {\n  let result = '';\n  result += emittedSuite.headerComment;\n  result += emittedSuite.dependencies;\n  result += emittedSuite.suiteDeclaration;\n  result += emittedSuite.variables;\n  result += emittedSuite.beforeAll;\n  result += emittedSuite.beforeEach;\n  result += emittedSuite.afterEach;\n  result += emittedSuite.afterAll;\n  result += emittedSuite.methods;\n\n  if (emittedSuite.tests.testDeclaration) {\n    const test = emittedSuite.tests;\n    result += test.testDeclaration;\n    result += test.inEachBegin;\n    result += test.commands;\n    result += test.inEachEnd;\n    result += test.testEnd;\n  } else {\n    for (const testName in emittedSuite.tests) {\n      const test = emittedSuite.tests[testName];\n      result += test.testDeclaration;\n      result += test.inEachBegin;\n      result += test.commands;\n      result += test.inEachEnd;\n      result += test.testEnd;\n    }\n  }\n\n  result += emittedSuite.suiteEnd;\n  return result;\n}\n\nvar _default = {\n  command: emitCommand,\n  commands: emitCommands,\n  location: emitLocation,\n  method: emitMethod,\n  selection: emitSelection,\n  suite: emitSuite,\n  orderedSuite: emitOrderedSuite,\n  test: emitTest,\n  text: _stringEscape.default,\n  testsFromSuite: emitTestsFromSuite\n};\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///93\n");

/***/ }),

/***/ 94:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.registerCommand = registerCommand;\nexports.Commands = exports.TargetTypes = void 0;\n\nvar _ArgTypes = __webpack_require__(57);\n\nfunction _objectSpread2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst TargetTypes = {\n  NONE: 0,\n  LOCATOR: 'locator',\n  REGION: 'region'\n};\nexports.TargetTypes = TargetTypes;\n\nfunction registerCommand(id, command) {\n  if (Commands.find(c => c[0] === command.command)) throw new Error('Unable to overwrite existing command');\n  Commands.push([id, command]);\n}\n\nconst Commands = [['addSelection', {\n  name: 'add selection',\n  description: `Add a selection to the set of options in a multi-select element.`,\n  type: TargetTypes.LOCATOR,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.value\n}], ['answerOnNextPrompt', {\n  name: 'answer on next prompt',\n  description: `Affects the next alert prompt. This command will send the \n        specified answer string to it. If the alert is already present, then use \n        \"webdriver answer on visible prompt\" instead.`,\n  target: _ArgTypes.ArgTypes.answer\n}], ['assert', {\n  name: 'assert',\n  description: `Check that a variable is an expected value. The variable's \n        value will be converted to a string for comparison. The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.variableName,\n  value: _ArgTypes.ArgTypes.expectedValue\n}], ['assertAlert', {\n  name: 'assert alert',\n  description: `Confirm that an alert has been rendered with the provided text. The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.alertText\n}], ['assertChecked', {\n  name: 'assert checked',\n  type: TargetTypes.LOCATOR,\n  description: 'Confirm that the target element has been checked. The test will stop if the assert fails.',\n  target: _ArgTypes.ArgTypes.locator\n}], ['assertConfirmation', {\n  name: 'assert confirmation',\n  description: 'Confirm that a confirmation has been rendered. The test will stop if the assert fails.',\n  target: _ArgTypes.ArgTypes.text\n}], ['assertEditable', {\n  name: 'assert editable',\n  type: TargetTypes.LOCATOR,\n  description: 'Confirm that the target element is editable. The test will stop if the assert fails.',\n  target: _ArgTypes.ArgTypes.locator\n}], ['assertElementPresent', {\n  name: 'assert element present',\n  type: TargetTypes.LOCATOR,\n  description: `Confirm that the target element is present somewhere on the page. The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['assertElementNotPresent', {\n  name: 'assert element not present',\n  type: TargetTypes.LOCATOR,\n  description: `Confirm that the target element is not present anywhere on the page. The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['assertNotChecked', {\n  name: 'assert not checked',\n  type: TargetTypes.LOCATOR,\n  description: 'Confirm that the target element has not been checked. The test will stop if the assert fails.',\n  target: _ArgTypes.ArgTypes.locator\n}], ['assertNotEditable', {\n  name: 'assert not editable',\n  type: TargetTypes.LOCATOR,\n  description: 'Confirm that the target element is not editable. The test will stop if the assert fails.',\n  target: _ArgTypes.ArgTypes.locator\n}], ['assertNotSelectedValue', {\n  name: 'assert not selected value',\n  type: TargetTypes.LOCATOR,\n  description: `Confirm that the value attribute of the selected option \n        in a dropdown element does not contain the provided value. The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.selectLocator,\n  value: _ArgTypes.ArgTypes.pattern\n}], ['assertNotText', {\n  name: 'assert not text',\n  type: TargetTypes.LOCATOR,\n  description: `Confirm that the text of an element does not contain the provided value.\n      The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.pattern\n}], ['assertPrompt', {\n  name: 'assert prompt',\n  description: 'Confirm that a JavaScript prompt has been rendered. The test will stop if the assert fails.',\n  target: _ArgTypes.ArgTypes.text\n}], ['assertSelectedValue', {\n  name: 'assert selected value',\n  type: TargetTypes.LOCATOR,\n  description: `Confirm that the value attribute of the selected option \n        in a dropdown element contains the provided value. The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.selectLocator,\n  value: _ArgTypes.ArgTypes.pattern\n}], ['assertSelectedLabel', {\n  name: 'assert selected label',\n  type: TargetTypes.LOCATOR,\n  description: `Confirm that the label of the selected option in a dropdown \n        element contains the provided value. The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.selectLocator,\n  value: _ArgTypes.ArgTypes.pattern\n}], ['assertText', {\n  name: 'assert text',\n  type: TargetTypes.LOCATOR,\n  description: `Confirm that the text of an element contains the provided value.\n      The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.pattern\n}], ['assertTitle', {\n  name: 'assert title',\n  description: `Confirm the title of the current page contains the provided text.\n      The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.pattern\n}], ['assertValue', {\n  name: 'assert value',\n  type: TargetTypes.LOCATOR,\n  description: `Confirm the (whitespace-trimmed) value of an input field \n        (or anything else with a value parameter). For checkbox/radio elements, \n        the value will be \"on\" or \"off\" depending on whether the element is \n        checked or not. The test will stop if the assert fails.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.pattern\n}], ['check', {\n  name: 'check',\n  type: TargetTypes.LOCATOR,\n  description: 'Check a toggle-button (checkbox/radio).',\n  target: _ArgTypes.ArgTypes.locator\n}], ['chooseCancelOnNextConfirmation', {\n  name: 'choose cancel on next confirmation',\n  description: `Affects the next confirmation alert. This command will \n        cancel it. If the alert is already present, then use \"webdriver choose \n        cancel on visible confirmation\" instead.`\n}], ['chooseCancelOnNextPrompt', {\n  name: 'choose cancel on next prompt',\n  description: `Affects the next alert prompt. This command will cancel \n        it. If the alert is already present, then use \"webdriver choose cancel \n        on visible prompt\" instead.`\n}], ['chooseOkOnNextConfirmation', {\n  name: 'choose ok on next confirmation',\n  description: `Affects the next confirmation alert. This command will \n        accept it. If the alert is already present, then use \"webdriver choose \n        ok on visible confirmation\" instead.`\n}], ['click', {\n  name: 'click',\n  type: TargetTypes.LOCATOR,\n  description: `Clicks on a target element (e.g., a link, button, checkbox, or radio button).`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['clickAt', {\n  name: 'click at',\n  type: TargetTypes.LOCATOR,\n  description: `Clicks on a target element (e.g., a link, button, checkbox, \n        or radio button). The coordinates are relative to the target element \n        (e.g., 0,0 is the top left corner of the element) and are mostly used \n        to check effects that relay on them, for example the material ripple effect.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _objectSpread2({\n    isOptional: true\n  }, _ArgTypes.ArgTypes.coord)\n}], ['close', {\n  name: 'close',\n  description: `Closes the current window. There is no need to close the \n        initial window, IDE will re-use it; closing it may cause a performance \n        penalty on the test.`\n}], ['debugger', {\n  name: 'debugger',\n  description: 'Breaks the execution and enters debugger'\n}], ['do', {\n  name: 'do',\n  description: `Create a loop that executes the proceeding commands at \n        least once. Terminate the branch with the repeat if command.`\n}], ['doubleClick', {\n  name: 'double click',\n  type: TargetTypes.LOCATOR,\n  description: `Double clicks on an element (e.g., a link, button, checkbox, or radio button).`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['doubleClickAt', {\n  name: 'double click at',\n  type: TargetTypes.LOCATOR,\n  description: `Double clicks on a target element (e.g., a link, button, \n        checkbox, or radio button). The coordinates are relative to the target \n        element (e.g., 0,0 is the top left corner of the element) and are mostly \n        used to check effects that relay on them, for example the material \n        ripple effect.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.coord\n}], ['dragAndDropToObject', {\n  name: 'drag and drop to object',\n  type: TargetTypes.LOCATOR,\n  description: 'Drags an element and drops it on another element.',\n  target: _ArgTypes.ArgTypes.locatorOfObjectToBeDragged,\n  value: _ArgTypes.ArgTypes.locatorOfDragDestinationObject\n}], ['echo', {\n  name: 'echo',\n  description: `Prints the specified message into the third table cell in \n        your Selenese tables. Useful for debugging.`,\n  target: _ArgTypes.ArgTypes.message\n}], ['editContent', {\n  name: 'edit content',\n  type: TargetTypes.LOCATOR,\n  description: `Sets the value of a content editable element as if you typed in it.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.value\n}], ['else', {\n  name: 'else',\n  description: `Part of an if block. Execute the commands in this branch \n        when an if and/or else if condition are not met. Terminate the branch \n        with the end command.`\n}], ['elseIf', {\n  name: 'else if',\n  description: `Part of an if block. Execute the commands in this branch \n        when an if condition has not been met. Terminate the branch with the \n        end command.`,\n  target: _ArgTypes.ArgTypes.conditionalExpression\n}], ['end', {\n  name: 'end',\n  description: `Terminates a control flow block for if, while, and times.`\n}], ['executeScript', {\n  name: 'execute script',\n  description: `Executes a snippet of JavaScript in the context of the \n        currently selected frame or window. The script fragment will be executed \n        as the body of an anonymous function.  To store the return value, use \n        the 'return' keyword and provide a variable name in the value input field.`,\n  target: _ArgTypes.ArgTypes.script,\n  value: _objectSpread2({\n    isOptional: true\n  }, _ArgTypes.ArgTypes.variableName)\n}], ['executeAsyncScript', {\n  name: 'execute async script',\n  description: `Executes an async snippet of JavaScript in the context of \n        the currently selected frame or window. The script fragment will be \n        executed as the body of an anonymous function and must return a Promise. \n        The Promise result will be saved on the variable if you use the 'return' \n        keyword.`,\n  target: _ArgTypes.ArgTypes.script,\n  value: _objectSpread2({\n    isOptional: true\n  }, _ArgTypes.ArgTypes.variableName)\n}], ['forEach', {\n  name: 'for each',\n  description: `Create a loop that executes the proceeding commands for each item in a given collection.`,\n  target: _ArgTypes.ArgTypes.arrayVariableName,\n  value: _ArgTypes.ArgTypes.iteratorVariableName\n}], ['if', {\n  name: 'if',\n  type: TargetTypes.LOCATOR,\n  description: `Create a conditional branch in your test. Terminate the branch with the end command.`,\n  target: _ArgTypes.ArgTypes.conditionalExpression\n}], ['mouseDown', {\n  name: 'mouse down',\n  type: TargetTypes.LOCATOR,\n  description: `Simulates a user pressing the left mouse button (without \n        releasing it yet).`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['mouseDownAt', {\n  name: 'mouse down at',\n  type: TargetTypes.LOCATOR,\n  description: `Simulates a user pressing the left mouse button (without \n        releasing it yet) at the specified location.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.coord\n}], ['mouseMoveAt', {\n  name: 'mouse move at',\n  type: TargetTypes.LOCATOR,\n  description: `Simulates a user pressing the mouse button (without releasing \n        it yet) on the specified element.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.coord\n}], ['mouseOut', {\n  name: 'mouse out',\n  type: TargetTypes.LOCATOR,\n  description: `Simulates a user moving the mouse pointer away from the specified element.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['mouseOver', {\n  name: 'mouse over',\n  type: TargetTypes.LOCATOR,\n  description: `Simulates a user hovering a mouse over the specified element.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['mouseUp', {\n  name: 'mouse up',\n  type: TargetTypes.LOCATOR,\n  description: `Simulates the event that occurs when the user releases the \n        mouse button (e.g., stops holding the button down).`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['mouseUpAt', {\n  name: 'mouse up at',\n  type: TargetTypes.LOCATOR,\n  description: `Simulates the event that occurs when the user releases the \n        mouse button (e.g., stops holding the button down) at the specified location.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.coord\n}], ['open', {\n  name: 'open',\n  description: `Opens a URL and waits for the page to load before proceeding. \n        This accepts both relative and absolute URLs.`,\n  target: _ArgTypes.ArgTypes.url\n}], ['pause', {\n  name: 'pause',\n  description: 'Wait for the specified amount of time.',\n  target: _ArgTypes.ArgTypes.waitTime\n}], ['removeSelection', {\n  name: 'remove selection',\n  type: TargetTypes.LOCATOR,\n  description: `Remove a selection from the set of selected options in a \n        multi-select element using an option locator.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.optionLocator\n}], ['repeatIf', {\n  name: 'repeat if',\n  description: `Terminate a 'do' control flow branch conditionally. If \n        the result of the provided conditional expression is true, it starts \n        the do loop over.  Otherwise it ends the loop.`,\n  target: _ArgTypes.ArgTypes.conditionalExpression,\n  value: _objectSpread2({\n    isOptional: true\n  }, _ArgTypes.ArgTypes.loopLimit)\n}], ['run', {\n  name: 'run',\n  description: 'Runs a test case from the current project.',\n  target: _ArgTypes.ArgTypes.testCase,\n  value: _objectSpread2({\n    isOptional: true\n  }, _ArgTypes.ArgTypes.optionalFlag)\n}], ['runScript', {\n  name: 'run script',\n  description: `Creates a new \"script\" tag in the body of the current \n        test window, and adds the specified text into the body of the command. \n        Beware that JS exceptions thrown in these script tags aren't managed \n        by Selenium, so you should probably wrap your script in try/catch blocks \n        if there is any chance that the script will throw an exception.`,\n  target: _ArgTypes.ArgTypes.script\n}], ['select', {\n  name: 'select',\n  type: TargetTypes.LOCATOR,\n  description: `Select an element from a drop-down menu using an option \n        locator. Option locators provide different ways of specifying a select \n        element (e.g., label=, value=, id=, index=). If no option locator prefix \n        is provided, a match on the label will be attempted.`,\n  target: _ArgTypes.ArgTypes.selectLocator,\n  value: _ArgTypes.ArgTypes.optionLocator\n}], ['selectFrame', {\n  name: 'select frame',\n  type: TargetTypes.LOCATOR,\n  description: `Selects a frame within the current window. You can select a\n        frame by its 0-based index number (e.g., select the first frame with \n        \"index=0\", or the third frame with \"index=2\"). For nested frames you will\n        need to invoke this command multiple times (once for each frame in the \n        tree until you reach your desired frame). You can select the parent \n        frame with \"relative=parent\". To return to the top of the page use \n        \"relative=top\".`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['selectWindow', {\n  name: 'select window',\n  description: `Selects a popup window using a window locator. Once a \n        popup window has been selected, all commands will go to that window. \n        Window locators use handles to select windows.`,\n  target: _ArgTypes.ArgTypes.handle\n}], ['sendKeys', {\n  name: 'send keys',\n  type: TargetTypes.LOCATOR,\n  description: `Simulates keystroke events on the specified element, as \n        though you typed the value key-by-key. This simulates a real user typing \n        every character in the specified string; it is also bound by the \n        limitations of a real user, like not being able to type into a invisible \n        or read only elements.  This is useful for dynamic UI widgets (like \n        auto-completing combo boxes) that require explicit key events. Unlike \n        the simple \"type\" command, which forces the specified value into the \n        page directly, this command will not replace the existing content.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.keySequence\n}], ['setSpeed', {\n  name: 'set speed',\n  description: `Set execution speed (e.g., set the millisecond length of \n        a delay which will follow each Selenium operation). By default, there \n        is no such delay, e.g., the delay is 0 milliseconds. This setting is \n        global, and will affect all test runs, until changed.`,\n  target: _ArgTypes.ArgTypes.waitTime\n}], ['setWindowSize', {\n  name: 'set window size',\n  description: \"Set the browser's window size, including the browser's interface.\",\n  target: _ArgTypes.ArgTypes.resolution\n}], ['store', {\n  name: 'store',\n  description: 'Save a target string as a variable for easy re-use.',\n  target: _ArgTypes.ArgTypes.text,\n  value: _ArgTypes.ArgTypes.variableName\n}], ['storeAttribute', {\n  name: 'store attribute',\n  description: `Gets the value of an element attribute. The value of the \n        attribute may differ across browsers (this is the case for the \"style\" \n        attribute, for example).`,\n  target: _ArgTypes.ArgTypes.attributeLocator,\n  value: _ArgTypes.ArgTypes.variableName\n}], ['storeJson', {\n  name: 'store json',\n  description: ``,\n  target: _ArgTypes.ArgTypes.json,\n  value: _ArgTypes.ArgTypes.variableName\n}], ['storeText', {\n  name: 'store text',\n  type: TargetTypes.LOCATOR,\n  description: `Gets the text of an element and stores it for later use. \n        This works for any element that contains text.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.variableName\n}], ['storeTitle', {\n  name: 'store title',\n  description: 'Gets the title of the current page.',\n  target: _ArgTypes.ArgTypes.text,\n  value: _ArgTypes.ArgTypes.variableName\n}], ['storeValue', {\n  name: 'store value',\n  type: TargetTypes.LOCATOR,\n  description: `Gets the value of element and stores it for later use. \n        This works for any input type element.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.variableName\n}], ['storeWindowHandle', {\n  name: 'store window handle',\n  description: 'Gets the handle of the current page.',\n  target: _ArgTypes.ArgTypes.handle\n}], ['storeXpathCount', {\n  name: 'store xpath count',\n  description: `Gets the number of nodes that match the specified xpath \n        (e.g. \"//table\" would give the number of tables).`,\n  target: _ArgTypes.ArgTypes.xpath,\n  value: _ArgTypes.ArgTypes.variableName\n}], ['submit', {\n  name: 'submit',\n  type: TargetTypes.LOCATOR,\n  description: `Submit the specified form. This is particularly useful for \n        forms without submit buttons, e.g. single-input \"Search\" forms.`,\n  target: _ArgTypes.ArgTypes.formLocator\n}], ['times', {\n  name: 'times',\n  description: `Create a loop that executes the proceeding commands n number of times.`,\n  target: _ArgTypes.ArgTypes.times,\n  value: _objectSpread2({\n    isOptional: true\n  }, _ArgTypes.ArgTypes.loopLimit)\n}], ['type', {\n  name: 'type',\n  type: TargetTypes.LOCATOR,\n  description: `Sets the value of an input field, as though you typed it \n        in. Can also be used to set the value of combo boxes, check boxes, etc. \n        In these cases, value should be the value of the option selected, not \n        the visible text.  Chrome only: If a file path is given it will be \n        uploaded to the input (for type=file), NOTE: XPath locators are not \n        supported.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.value\n}], ['uncheck', {\n  name: 'uncheck',\n  type: TargetTypes.LOCATOR,\n  description: 'Uncheck a toggle-button (checkbox/radio).',\n  target: _ArgTypes.ArgTypes.locator\n}], ['verify', {\n  name: 'verify',\n  description: `Soft assert that a variable is an expected value. The \n        variable's value will be converted to a string for comparison.\n        The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.variableName,\n  value: _ArgTypes.ArgTypes.expectedValue\n}], ['verifyChecked', {\n  name: 'verify checked',\n  type: TargetTypes.LOCATOR,\n  description: `Soft assert that a toggle-button (checkbox/radio) has been checked.\n      The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['verifyEditable', {\n  name: 'verify editable',\n  type: TargetTypes.LOCATOR,\n  description: `Soft assert whether the specified input element is \n        editable (e.g., hasn't been disabled). The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['verifyElementPresent', {\n  name: 'verify element present',\n  type: TargetTypes.LOCATOR,\n  description: `Soft assert that the specified element is somewhere on the page.\n      The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['verifyElementNotPresent', {\n  name: 'verify element not present',\n  type: TargetTypes.LOCATOR,\n  description: `Soft assert that the specified element is not somewhere on the page.\n      The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['verifyNotChecked', {\n  name: 'verify not checked',\n  type: TargetTypes.LOCATOR,\n  description: `Soft assert that a toggle-button (checkbox/radio) has not been checked.\n      The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['verifyNotEditable', {\n  name: 'verify not editable',\n  type: TargetTypes.LOCATOR,\n  description: `Soft assert whether the specified input element is not \n        editable (e.g., hasn't been disabled). The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.locator\n}], ['verifyNotSelectedValue', {\n  name: 'verify not selected value',\n  description: `Soft assert that the expected element has not been chosen \n        in a select menu by its option attribute. The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.selectLocator,\n  value: _ArgTypes.ArgTypes.optionLocator\n}], ['verifyNotText', {\n  name: 'verify not text',\n  type: TargetTypes.LOCATOR,\n  description: 'Soft assert the text of an element is not present. The test will continue even if the verify fails.',\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.text\n}], ['verifySelectedLabel', {\n  name: 'verify selected label',\n  type: TargetTypes.LOCATOR,\n  description: `Soft assert the visible text for a selected option in the \n        specified select element. The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.selectLocator,\n  value: _ArgTypes.ArgTypes.pattern\n}], ['verifySelectedValue', {\n  name: 'verify selected value',\n  type: TargetTypes.LOCATOR,\n  description: `Soft assert that the expected element has been chosen in \n        a select menu by its option attribute. The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.selectLocator,\n  value: _ArgTypes.ArgTypes.optionLocator\n}], ['verifyText', {\n  name: 'verify text',\n  type: TargetTypes.LOCATOR,\n  description: 'Soft assert the text of an element is present. The test will continue even if the verify fails.',\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.text\n}], ['verifyTitle', {\n  name: 'verify title',\n  description: 'Soft assert the title of the current page contains the provided text. The test will continue even if the verify fails.',\n  target: _ArgTypes.ArgTypes.text\n}], ['verifyValue', {\n  name: 'verify value',\n  type: TargetTypes.LOCATOR,\n  description: `Soft assert the (whitespace-trimmed) value of an input \n        field (or anything else with a value parameter). For checkbox/radio \n        elements, the value will be \"on\" or \"off\" depending on whether the \n        element is checked or not. The test will continue even if the verify fails.`,\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.pattern\n}], ['waitForElementEditable', {\n  name: 'wait for element editable',\n  type: TargetTypes.LOCATOR,\n  description: 'Wait for an element to be editable.',\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.waitTime\n}], ['waitForElementNotEditable', {\n  name: 'wait for element not editable',\n  type: TargetTypes.LOCATOR,\n  description: 'Wait for an element to not be editable.',\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.waitTime\n}], ['waitForElementNotPresent', {\n  name: 'wait for element not present',\n  type: TargetTypes.LOCATOR,\n  description: 'Wait for a target element to not be present on the page.',\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.waitTime\n}], ['waitForElementNotVisible', {\n  name: 'wait for element not visible',\n  type: TargetTypes.LOCATOR,\n  description: 'Wait for a target element to not be visible on the page.',\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.waitTime\n}], ['waitForElementPresent', {\n  name: 'wait for element present',\n  type: TargetTypes.LOCATOR,\n  description: 'Wait for a target element to be present on the page.',\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.waitTime\n}], ['waitForElementVisible', {\n  name: 'wait for element visible',\n  type: TargetTypes.LOCATOR,\n  description: 'Wait for a target element to be visible on the page.',\n  target: _ArgTypes.ArgTypes.locator,\n  value: _ArgTypes.ArgTypes.waitTime\n}], ['webdriverAnswerOnVisiblePrompt', {\n  name: 'webdriver answer on visible prompt',\n  description: `Affects a currently showing alert prompt. This command \n        instructs Selenium to provide the specified answer to it. If the alert \n        has not appeared yet then use \"answer on next prompt\" instead.`,\n  target: _ArgTypes.ArgTypes.answer\n}], ['webdriverChooseCancelOnVisibleConfirmation', {\n  name: 'webdriver choose cancel on visible confirmation',\n  description: `Affects a currently showing confirmation alert. This \n        command instructs Selenium to cancel it. If the alert has not appeared \n        yet then use \"choose cancel on next confirmation\" instead.`\n}], ['webdriverChooseCancelOnVisiblePrompt', {\n  name: 'webdriver choose cancel on visible prompt',\n  description: `Affects a currently showing alert prompt. This command \n        instructs Selenium to cancel it. If the alert has not appeared yet \n        then use \"choose cancel on next prompt\" instead.`\n}], ['webdriverChooseOkOnVisibleConfirmation', {\n  name: 'webdriver choose ok on visible confirmation',\n  description: `Affects a currently showing confirmation alert. This \n        command instructs Selenium to accept it. If the alert has not appeared \n        yet then use \"choose ok on next confirmation\" instead.`\n}], ['while', {\n  name: 'while',\n  description: `Create a loop that executes the proceeding commands \n        repeatedly for as long as the provided conditional expression is true.`,\n  target: _ArgTypes.ArgTypes.conditionalExpression,\n  value: _objectSpread2({\n    isOptional: true\n  }, _ArgTypes.ArgTypes.loopLimit)\n}]];\nexports.Commands = Commands;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///94\n");

/***/ }),

/***/ 95:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearHooks = clearHooks;\nexports.default = void 0;\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nclass Hook {\n  constructor({\n    startingSyntax,\n    endingSyntax,\n    registrationLevel\n  } = {}) {\n    this.startingSyntax = startingSyntax;\n    this.endingSyntax = endingSyntax;\n    this.registrationLevel = registrationLevel;\n    this.clearRegister = this.clearRegister.bind(this);\n    this.emit = this.emit.bind(this);\n    this.register = this.register.bind(this);\n    this.isRegistered = this.isRegistered.bind(this);\n    this.clearRegister();\n  }\n\n  clearRegister() {\n    this.emitters = [];\n  }\n\n  async emit({\n    isOptional,\n    test,\n    suite,\n    tests,\n    project,\n    startingSyntaxOptions\n  } = {\n    isOptional: false\n  }) {\n    const commands = [];\n    let registeredCommandLevel = 0;\n\n    if (this.startingSyntax) {\n      const _startingSyntax = typeof this.startingSyntax === 'function' ? this.startingSyntax(startingSyntaxOptions) : this.startingSyntax;\n\n      if (_startingSyntax.commands) {\n        _startingSyntax.commands.forEach(command => {\n          commands.push(command);\n          registeredCommandLevel = command.level;\n        });\n      } else {\n        commands.push({\n          level: 0,\n          statement: _startingSyntax\n        });\n      }\n    }\n\n    const name = test ? test.name : suite ? suite.name : undefined;\n    const emittedCommands = (await Promise.all(this.emitters.map(emitter => emitter({\n      name,\n      tests,\n      project\n    })))).filter(entry => entry != undefined);\n    if (isOptional && !emittedCommands.length) return;\n    emittedCommands.forEach(command => {\n      if (typeof command === 'object') {\n        commands.push(command);\n      } else if (typeof command === 'string') {\n        command.split('\\n').forEach(statement => {\n          commands.push({\n            level: this.registrationLevel ? this.registrationLevel : registeredCommandLevel,\n            statement\n          });\n        });\n      }\n    });\n\n    if (this.endingSyntax) {\n      if (this.endingSyntax.commands) {\n        this.endingSyntax.commands.forEach(command => {\n          commands.push(command);\n        });\n      } else {\n        commands.push({\n          level: 0,\n          statement: this.endingSyntax\n        });\n      }\n    }\n\n    return {\n      commands\n    };\n  }\n\n  register(emitter) {\n    this.emitters.push(emitter);\n  }\n\n  async isRegistered(input = '') {\n    const result = await Promise.all(this.emitters.map(emitter => emitter()));\n    return result.includes(input);\n  }\n\n}\n\nexports.default = Hook;\n\nfunction clearHooks(hooks) {\n  Object.keys(hooks).forEach(hook => {\n    hooks[hook].clearRegister();\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9ob29rLmpzPzZjYjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNsZWFySG9va3MgPSBjbGVhckhvb2tzO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xuXG4vLyBMaWNlbnNlZCB0byB0aGUgU29mdHdhcmUgRnJlZWRvbSBDb25zZXJ2YW5jeSAoU0ZDKSB1bmRlciBvbmVcbi8vIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuLy8gZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbi8vIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIFNGQyBsaWNlbnNlcyB0aGlzIGZpbGVcbi8vIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbi8vIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuLy8gd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuLy8gc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbi8vIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4vLyBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbi8vIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbi8vIHVuZGVyIHRoZSBMaWNlbnNlLlxuY2xhc3MgSG9vayB7XG4gIGNvbnN0cnVjdG9yKHtcbiAgICBzdGFydGluZ1N5bnRheCxcbiAgICBlbmRpbmdTeW50YXgsXG4gICAgcmVnaXN0cmF0aW9uTGV2ZWxcbiAgfSA9IHt9KSB7XG4gICAgdGhpcy5zdGFydGluZ1N5bnRheCA9IHN0YXJ0aW5nU3ludGF4O1xuICAgIHRoaXMuZW5kaW5nU3ludGF4ID0gZW5kaW5nU3ludGF4O1xuICAgIHRoaXMucmVnaXN0cmF0aW9uTGV2ZWwgPSByZWdpc3RyYXRpb25MZXZlbDtcbiAgICB0aGlzLmNsZWFyUmVnaXN0ZXIgPSB0aGlzLmNsZWFyUmVnaXN0ZXIuYmluZCh0aGlzKTtcbiAgICB0aGlzLmVtaXQgPSB0aGlzLmVtaXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlZ2lzdGVyID0gdGhpcy5yZWdpc3Rlci5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaXNSZWdpc3RlcmVkID0gdGhpcy5pc1JlZ2lzdGVyZWQuYmluZCh0aGlzKTtcbiAgICB0aGlzLmNsZWFyUmVnaXN0ZXIoKTtcbiAgfVxuXG4gIGNsZWFyUmVnaXN0ZXIoKSB7XG4gICAgdGhpcy5lbWl0dGVycyA9IFtdO1xuICB9XG5cbiAgYXN5bmMgZW1pdCh7XG4gICAgaXNPcHRpb25hbCxcbiAgICB0ZXN0LFxuICAgIHN1aXRlLFxuICAgIHRlc3RzLFxuICAgIHByb2plY3QsXG4gICAgc3RhcnRpbmdTeW50YXhPcHRpb25zXG4gIH0gPSB7XG4gICAgaXNPcHRpb25hbDogZmFsc2VcbiAgfSkge1xuICAgIGNvbnN0IGNvbW1hbmRzID0gW107XG4gICAgbGV0IHJlZ2lzdGVyZWRDb21tYW5kTGV2ZWwgPSAwO1xuXG4gICAgaWYgKHRoaXMuc3RhcnRpbmdTeW50YXgpIHtcbiAgICAgIGNvbnN0IF9zdGFydGluZ1N5bnRheCA9IHR5cGVvZiB0aGlzLnN0YXJ0aW5nU3ludGF4ID09PSAnZnVuY3Rpb24nID8gdGhpcy5zdGFydGluZ1N5bnRheChzdGFydGluZ1N5bnRheE9wdGlvbnMpIDogdGhpcy5zdGFydGluZ1N5bnRheDtcblxuICAgICAgaWYgKF9zdGFydGluZ1N5bnRheC5jb21tYW5kcykge1xuICAgICAgICBfc3RhcnRpbmdTeW50YXguY29tbWFuZHMuZm9yRWFjaChjb21tYW5kID0+IHtcbiAgICAgICAgICBjb21tYW5kcy5wdXNoKGNvbW1hbmQpO1xuICAgICAgICAgIHJlZ2lzdGVyZWRDb21tYW5kTGV2ZWwgPSBjb21tYW5kLmxldmVsO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbW1hbmRzLnB1c2goe1xuICAgICAgICAgIGxldmVsOiAwLFxuICAgICAgICAgIHN0YXRlbWVudDogX3N0YXJ0aW5nU3ludGF4XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IG5hbWUgPSB0ZXN0ID8gdGVzdC5uYW1lIDogc3VpdGUgPyBzdWl0ZS5uYW1lIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IGVtaXR0ZWRDb21tYW5kcyA9IChhd2FpdCBQcm9taXNlLmFsbCh0aGlzLmVtaXR0ZXJzLm1hcChlbWl0dGVyID0+IGVtaXR0ZXIoe1xuICAgICAgbmFtZSxcbiAgICAgIHRlc3RzLFxuICAgICAgcHJvamVjdFxuICAgIH0pKSkpLmZpbHRlcihlbnRyeSA9PiBlbnRyeSAhPSB1bmRlZmluZWQpO1xuICAgIGlmIChpc09wdGlvbmFsICYmICFlbWl0dGVkQ29tbWFuZHMubGVuZ3RoKSByZXR1cm47XG4gICAgZW1pdHRlZENvbW1hbmRzLmZvckVhY2goY29tbWFuZCA9PiB7XG4gICAgICBpZiAodHlwZW9mIGNvbW1hbmQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGNvbW1hbmRzLnB1c2goY29tbWFuZCk7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBjb21tYW5kID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb21tYW5kLnNwbGl0KCdcXG4nKS5mb3JFYWNoKHN0YXRlbWVudCA9PiB7XG4gICAgICAgICAgY29tbWFuZHMucHVzaCh7XG4gICAgICAgICAgICBsZXZlbDogdGhpcy5yZWdpc3RyYXRpb25MZXZlbCA/IHRoaXMucmVnaXN0cmF0aW9uTGV2ZWwgOiByZWdpc3RlcmVkQ29tbWFuZExldmVsLFxuICAgICAgICAgICAgc3RhdGVtZW50XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKHRoaXMuZW5kaW5nU3ludGF4KSB7XG4gICAgICBpZiAodGhpcy5lbmRpbmdTeW50YXguY29tbWFuZHMpIHtcbiAgICAgICAgdGhpcy5lbmRpbmdTeW50YXguY29tbWFuZHMuZm9yRWFjaChjb21tYW5kID0+IHtcbiAgICAgICAgICBjb21tYW5kcy5wdXNoKGNvbW1hbmQpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbW1hbmRzLnB1c2goe1xuICAgICAgICAgIGxldmVsOiAwLFxuICAgICAgICAgIHN0YXRlbWVudDogdGhpcy5lbmRpbmdTeW50YXhcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGNvbW1hbmRzXG4gICAgfTtcbiAgfVxuXG4gIHJlZ2lzdGVyKGVtaXR0ZXIpIHtcbiAgICB0aGlzLmVtaXR0ZXJzLnB1c2goZW1pdHRlcik7XG4gIH1cblxuICBhc3luYyBpc1JlZ2lzdGVyZWQoaW5wdXQgPSAnJykge1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IFByb21pc2UuYWxsKHRoaXMuZW1pdHRlcnMubWFwKGVtaXR0ZXIgPT4gZW1pdHRlcigpKSk7XG4gICAgcmV0dXJuIHJlc3VsdC5pbmNsdWRlcyhpbnB1dCk7XG4gIH1cblxufVxuXG5leHBvcnRzLmRlZmF1bHQgPSBIb29rO1xuXG5mdW5jdGlvbiBjbGVhckhvb2tzKGhvb2tzKSB7XG4gIE9iamVjdC5rZXlzKGhvb2tzKS5mb3JFYWNoKGhvb2sgPT4ge1xuICAgIGhvb2tzW2hvb2tdLmNsZWFyUmVnaXN0ZXIoKTtcbiAgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9ob29rLmpzXG4vLyBtb2R1bGUgaWQgPSA5NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiA0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///95\n");

/***/ }),

/***/ 96:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sanitizeName = sanitizeName;\nexports.capitalize = capitalize;\nexports.uncapitalize = uncapitalize;\nexports.default = void 0;\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nfunction sanitizeName(input) {\n  return input.replace(/([^a-z0-9]+)/gi, '');\n}\n\nfunction capitalize(input) {\n  return input.charAt(0).toUpperCase() + input.substr(1);\n}\n\nfunction uncapitalize(input) {\n  return input.charAt(0).toLowerCase() + input.substr(1);\n}\n\nvar _default = {\n  sanitizeName,\n  capitalize,\n  uncapitalize\n};\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9wYXJzZXJzLmpzPzdjMGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnNhbml0aXplTmFtZSA9IHNhbml0aXplTmFtZTtcbmV4cG9ydHMuY2FwaXRhbGl6ZSA9IGNhcGl0YWxpemU7XG5leHBvcnRzLnVuY2FwaXRhbGl6ZSA9IHVuY2FwaXRhbGl6ZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcblxuLy8gTGljZW5zZWQgdG8gdGhlIFNvZnR3YXJlIEZyZWVkb20gQ29uc2VydmFuY3kgKFNGQykgdW5kZXIgb25lXG4vLyBvciBtb3JlIGNvbnRyaWJ1dG9yIGxpY2Vuc2UgYWdyZWVtZW50cy4gIFNlZSB0aGUgTk9USUNFIGZpbGVcbi8vIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyB3b3JrIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uXG4vLyByZWdhcmRpbmcgY29weXJpZ2h0IG93bmVyc2hpcC4gIFRoZSBTRkMgbGljZW5zZXMgdGhpcyBmaWxlXG4vLyB0byB5b3UgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlXG4vLyBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Vcbi8vIHdpdGggdGhlIExpY2Vuc2UuICBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZyxcbi8vIHNvZnR3YXJlIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuXG4vLyBcIkFTIElTXCIgQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxuLy8gS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4gIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlXG4vLyBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zXG4vLyB1bmRlciB0aGUgTGljZW5zZS5cbmZ1bmN0aW9uIHNhbml0aXplTmFtZShpbnB1dCkge1xuICByZXR1cm4gaW5wdXQucmVwbGFjZSgvKFteYS16MC05XSspL2dpLCAnJyk7XG59XG5cbmZ1bmN0aW9uIGNhcGl0YWxpemUoaW5wdXQpIHtcbiAgcmV0dXJuIGlucHV0LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgaW5wdXQuc3Vic3RyKDEpO1xufVxuXG5mdW5jdGlvbiB1bmNhcGl0YWxpemUoaW5wdXQpIHtcbiAgcmV0dXJuIGlucHV0LmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpICsgaW5wdXQuc3Vic3RyKDEpO1xufVxuXG52YXIgX2RlZmF1bHQgPSB7XG4gIHNhbml0aXplTmFtZSxcbiAgY2FwaXRhbGl6ZSxcbiAgdW5jYXBpdGFsaXplXG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gX2RlZmF1bHQ7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9jb2RlLWV4cG9ydC9wYXJzZXJzLmpzXG4vLyBtb2R1bGUgaWQgPSA5NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMiA0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///96\n");

/***/ }),

/***/ 97:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _uaParserJs = _interopRequireDefault(__webpack_require__(98));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst getUserAgent = () => {\n  try {\n    return (0, _uaParserJs.default)(window.navigator.userAgent);\n  } catch (_unused) {\n    return false;\n  }\n};\n\nconst userAgent = getUserAgent();\nconst browser = userAgent && userAgent.browser ? userAgent.browser : undefined;\nconst isChrome = browser && browser.name === 'Chrome';\nconst isFirefox = browser && browser.name === 'Firefox';\nconst browserName = isChrome || isFirefox ? browser.name : undefined;\nmodule.exports = {\n  userAgent,\n  browserName,\n  isChrome,\n  isFirefox\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC91c2VyLWFnZW50L2luZGV4LmpzPzY4NmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfdWFQYXJzZXJKcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInVhLXBhcnNlci1qc1wiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIExpY2Vuc2VkIHRvIHRoZSBTb2Z0d2FyZSBGcmVlZG9tIENvbnNlcnZhbmN5IChTRkMpIHVuZGVyIG9uZVxuLy8gb3IgbW9yZSBjb250cmlidXRvciBsaWNlbnNlIGFncmVlbWVudHMuICBTZWUgdGhlIE5PVElDRSBmaWxlXG4vLyBkaXN0cmlidXRlZCB3aXRoIHRoaXMgd29yayBmb3IgYWRkaXRpb25hbCBpbmZvcm1hdGlvblxuLy8gcmVnYXJkaW5nIGNvcHlyaWdodCBvd25lcnNoaXAuICBUaGUgU0ZDIGxpY2Vuc2VzIHRoaXMgZmlsZVxuLy8gdG8geW91IHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZVxuLy8gXCJMaWNlbnNlXCIpOyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlXG4vLyB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsXG4vLyBzb2Z0d2FyZSBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhblxuLy8gXCJBUyBJU1wiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTllcbi8vIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuICBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZVxuLy8gc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZCBsaW1pdGF0aW9uc1xuLy8gdW5kZXIgdGhlIExpY2Vuc2UuXG5jb25zdCBnZXRVc2VyQWdlbnQgPSAoKSA9PiB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICgwLCBfdWFQYXJzZXJKcy5kZWZhdWx0KSh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH0gY2F0Y2ggKF91bnVzZWQpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5cbmNvbnN0IHVzZXJBZ2VudCA9IGdldFVzZXJBZ2VudCgpO1xuY29uc3QgYnJvd3NlciA9IHVzZXJBZ2VudCAmJiB1c2VyQWdlbnQuYnJvd3NlciA/IHVzZXJBZ2VudC5icm93c2VyIDogdW5kZWZpbmVkO1xuY29uc3QgaXNDaHJvbWUgPSBicm93c2VyICYmIGJyb3dzZXIubmFtZSA9PT0gJ0Nocm9tZSc7XG5jb25zdCBpc0ZpcmVmb3ggPSBicm93c2VyICYmIGJyb3dzZXIubmFtZSA9PT0gJ0ZpcmVmb3gnO1xuY29uc3QgYnJvd3Nlck5hbWUgPSBpc0Nocm9tZSB8fCBpc0ZpcmVmb3ggPyBicm93c2VyLm5hbWUgOiB1bmRlZmluZWQ7XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdXNlckFnZW50LFxuICBicm93c2VyTmFtZSxcbiAgaXNDaHJvbWUsXG4gIGlzRmlyZWZveFxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAvbW50L2MveWMvaW5zdGFudGFwaS9zZWxlbml1bS1pZGUvcGFja2FnZXMvc2lkZS11dGlscy9kaXN0L3VzZXItYWdlbnQvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDk3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAyIDQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///97\n");

/***/ }),

/***/ 98:
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * UAParser.js v0.7.20\n * Lightweight JavaScript-based User-Agent string parser\n * https://github.com/faisalman/ua-parser-js\n *\n * Copyright © 2012-2019 Faisal Salman <f@faisalman.com>\n * Licensed under MIT License\n */\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '0.7.20',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major', // deprecated\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded';\n\n\n    ///////////\n    // Helper\n    //////////\n\n\n    var util = {\n        extend : function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        has : function (str1, str2) {\n          if (typeof str1 === \"string\") {\n            return str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1;\n          } else {\n            return false;\n          }\n        },\n        lowerize : function (str) {\n            return str.toLowerCase();\n        },\n        major : function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g,'').split(\".\")[0] : undefined;\n        },\n        trim : function (str) {\n          return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n        }\n    };\n\n\n    ///////////////\n    // Map helper\n    //////////////\n\n\n    var mapper = {\n\n        rgx : function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length == 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length == 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length == 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        str : function (str, map) {\n\n            for (var i in map) {\n                // check if array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (util.has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (util.has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n        }\n    };\n\n\n    ///////////////\n    // String map\n    //////////////\n\n\n    var maps = {\n\n        browser : {\n            oldsafari : {\n                version : {\n                    '1.0'   : '/8',\n                    '1.2'   : '/1',\n                    '1.3'   : '/3',\n                    '2.0'   : '/412',\n                    '2.0.2' : '/416',\n                    '2.0.3' : '/417',\n                    '2.0.4' : '/419',\n                    '?'     : '/'\n                }\n            }\n        },\n\n        device : {\n            amazon : {\n                model : {\n                    'Fire Phone' : ['SD', 'KF']\n                }\n            },\n            sprint : {\n                model : {\n                    'Evo Shift 4G' : '7373KT'\n                },\n                vendor : {\n                    'HTC'       : 'APA',\n                    'Sprint'    : 'Sprint'\n                }\n            }\n        },\n\n        os : {\n            windows : {\n                version : {\n                    'ME'        : '4.90',\n                    'NT 3.11'   : 'NT3.51',\n                    'NT 4.0'    : 'NT4.0',\n                    '2000'      : 'NT 5.0',\n                    'XP'        : ['NT 5.1', 'NT 5.2'],\n                    'Vista'     : 'NT 6.0',\n                    '7'         : 'NT 6.1',\n                    '8'         : 'NT 6.2',\n                    '8.1'       : 'NT 6.3',\n                    '10'        : ['NT 6.4', 'NT 10.0'],\n                    'RT'        : 'ARM'\n                }\n            }\n        }\n    };\n\n\n    //////////////\n    // Regex map\n    /////////////\n\n\n    var regexes = {\n\n        browser : [[\n\n            // Presto based\n            /(opera\\smini)\\/([\\w\\.-]+)/i,                                       // Opera Mini\n            /(opera\\s[mobiletab]+).+version\\/([\\w\\.-]+)/i,                      // Opera Mobi/Tablet\n            /(opera).+version\\/([\\w\\.]+)/i,                                     // Opera > 9.80\n            /(opera)[\\/\\s]+([\\w\\.]+)/i                                          // Opera < 9.80\n            ], [NAME, VERSION], [\n\n            /(opios)[\\/\\s]+([\\w\\.]+)/i                                          // Opera mini on iphone >= 8.0\n            ], [[NAME, 'Opera Mini'], VERSION], [\n\n            /\\s(opr)\\/([\\w\\.]+)/i                                               // Opera Webkit\n            ], [[NAME, 'Opera'], VERSION], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?([\\w\\.]*)/i,\n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n\n            // Trident based\n            /(avant\\s|iemobile|slim|baidu)(?:browser)?[\\/\\s]?([\\w\\.]*)/i,\n                                                                                // Avant/IEMobile/SlimBrowser/Baidu\n            /(?:ms|\\()(ie)\\s([\\w\\.]+)/i,                                        // Internet Explorer\n\n            // Webkit/KHTML based\n            /(rekonq)\\/([\\w\\.]*)/i,                                             // Rekonq\n            /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\\/([\\w\\.-]+)/i\n                                                                                // Chromium/Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            ], [NAME, VERSION], [\n\n            /(konqueror)\\/([\\w\\.]+)/i                                           // Konqueror\n            ], [[NAME, 'Konqueror'], VERSION], [\n\n            /(trident).+rv[:\\s]([\\w\\.]+).+like\\sgecko/i                         // IE11\n            ], [[NAME, 'IE'], VERSION], [\n\n            /(edge|edgios|edga|edg)\\/((\\d+)?[\\w\\.]+)/i                          // Microsoft Edge\n            ], [[NAME, 'Edge'], VERSION], [\n\n            /(yabrowser)\\/([\\w\\.]+)/i                                           // Yandex\n            ], [[NAME, 'Yandex'], VERSION], [\n\n            /(puffin)\\/([\\w\\.]+)/i                                              // Puffin\n            ], [[NAME, 'Puffin'], VERSION], [\n\n            /(focus)\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [[NAME, 'Firefox Focus'], VERSION], [\n\n            /(opt)\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [[NAME, 'Opera Touch'], VERSION], [\n\n            /((?:[\\s\\/])uc?\\s?browser|(?:juc.+)ucweb)[\\/\\s]?([\\w\\.]+)/i         // UCBrowser\n            ], [[NAME, 'UCBrowser'], VERSION], [\n\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n\n            /(windowswechat qbcore)\\/([\\w\\.]+)/i                                // WeChat Desktop for Windows Built-in Browser\n            ], [[NAME, 'WeChat(Win) Desktop'], VERSION], [\n\n            /(micromessenger)\\/([\\w\\.]+)/i                                      // WeChat\n            ], [[NAME, 'WeChat'], VERSION], [\n\n            /(brave)\\/([\\w\\.]+)/i                                              // Brave browser\n            ], [[NAME, 'Brave'], VERSION], [\n\n            /(qqbrowserlite)\\/([\\w\\.]+)/i                                       // QQBrowserLite\n            ], [NAME, VERSION], [\n\n            /(QQ)\\/([\\d\\.]+)/i                                                  // QQ, aka ShouQ\n            ], [NAME, VERSION], [\n\n            /m?(qqbrowser)[\\/\\s]?([\\w\\.]+)/i                                    // QQBrowser\n            ], [NAME, VERSION], [\n\n            /(BIDUBrowser)[\\/\\s]?([\\w\\.]+)/i                                    // Baidu Browser\n            ], [NAME, VERSION], [\n\n            /(2345Explorer)[\\/\\s]?([\\w\\.]+)/i                                   // 2345 Browser\n            ], [NAME, VERSION], [\n\n            /(MetaSr)[\\/\\s]?([\\w\\.]+)/i                                         // SouGouBrowser\n            ], [NAME], [\n\n            /(LBBROWSER)/i                                      // LieBao Browser\n            ], [NAME], [\n\n            /xiaomi\\/miuibrowser\\/([\\w\\.]+)/i                                   // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI Browser']], [\n\n            /;fbav\\/([\\w\\.]+);/i                                                // Facebook App for iOS & Android\n            ], [VERSION, [NAME, 'Facebook']], [\n\n            /safari\\s(line)\\/([\\w\\.]+)/i,                                       // Line App for iOS\n            /android.+(line)\\/([\\w\\.]+)\\/iab/i                                  // Line App for Android\n            ], [NAME, VERSION], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)|\\s)/i                                 // Chrome Headless\n            ], [VERSION, [NAME, 'Chrome Headless']], [\n\n            /\\swv\\).+(chrome)\\/([\\w\\.]+)/i                                      // Chrome WebView\n            ], [[NAME, /(.+)/, '$1 WebView'], VERSION], [\n\n            /((?:oculus|samsung)browser)\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+(?:g|us))(.+)/, '$1 $2'], VERSION], [                // Oculus / Samsung Browser\n\n            /android.+version\\/([\\w\\.]+)\\s+(?:mobile\\s?safari|safari)*/i        // Android Browser\n            ], [VERSION, [NAME, 'Android Browser']], [\n\n            /(sailfishbrowser)\\/([\\w\\.]+)/i                                     // Sailfish Browser\n            ], [[NAME, 'Sailfish Browser'], VERSION], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5}\\s?browser)\\/v?([\\w\\.]+)/i\n                                                                                // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /(dolfin)\\/([\\w\\.]+)/i                                              // Dolphin\n            ], [[NAME, 'Dolphin'], VERSION], [\n\n            /((?:android.+)crmo|crios)\\/([\\w\\.]+)/i                             // Chrome for Android/iOS\n            ], [[NAME, 'Chrome'], VERSION], [\n\n            /(coast)\\/([\\w\\.]+)/i                                               // Opera Coast\n            ], [[NAME, 'Opera Coast'], VERSION], [\n\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, 'Firefox']], [\n\n            /version\\/([\\w\\.]+).+?mobile\\/\\w+\\s(safari)/i                       // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n\n            /version\\/([\\w\\.]+).+?(mobile\\s?safari|safari)/i                    // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n\n            /webkit.+?(gsa)\\/([\\w\\.]+).+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i  // Google Search Appliance on iOS\n            ], [[NAME, 'GSA'], VERSION], [\n\n            /webkit.+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i                     // Safari < 3.0\n            ], [NAME, [VERSION, mapper.str, maps.browser.oldsafari.version]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape)\\/([\\w\\.-]+)/i                                 // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo\\sbrowser|minimo|conkeror)[\\/\\s]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([\\w\\.-]+)$/i,\n\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(mozilla)\\/([\\w\\.]+).+rv\\:.+gecko\\/\\d+/i,                          // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\/\\s]?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir\n            /(links)\\s\\(([\\w\\.]+)/i,                                            // Links\n            /(gobrowser)\\/?([\\w\\.]*)/i,                                         // GoBrowser\n            /(ice\\s?browser)\\/v?([\\w\\._]+)/i,                                   // ICE Browser\n            /(mosaic)[\\/\\s]([\\w\\.]+)/i                                          // Mosaic\n            ], [NAME, VERSION]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i                     // AMD64\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, util.lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows\\s(ce|mobile);\\sppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i                           // PowerPC\n            ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|arm(?:64|(?=v\\d+[;l]))|(?=atmel\\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, util.lowerize]]\n        ],\n\n        device : [[\n\n            /\\((ipad|playbook);[\\w\\s\\),;-]+(rim|apple)/i                        // iPad/PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/                                  // iPad\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [\n\n            /(apple\\s{0,1}tv)/i                                                 // Apple TV\n            ], [[MODEL, 'Apple TV'], [VENDOR, 'Apple']], [\n\n            /(archos)\\s(gamepad2?)/i,                                           // Archos\n            /(hp).+(touchpad)/i,                                                // HP TouchPad\n            /(hp).+(tablet)/i,                                                  // HP Tablet\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /\\s(nook)[\\w\\s]+build\\/(\\w+)/i,                                     // Nook\n            /(dell)\\s(strea[kpr\\s\\d]*[\\dko])/i                                  // Dell Streak\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(kf[A-z]+)\\sbuild\\/.+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\n            /(sd|kf)[0349hijorstuw]+\\sbuild\\/.+silk\\//i                         // Fire Phone\n            ], [[MODEL, mapper.str, maps.device.amazon.model], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [\n            /android.+aft([bms])\\sbuild/i                                       // Fire TV\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, SMARTTV]], [\n\n            /\\((ip[honed|\\s\\w*]+);.+(apple)/i                                   // iPod/iPhone\n            ], [MODEL, VENDOR, [TYPE, MOBILE]], [\n            /\\((ip[honed|\\s\\w*]+);/i                                            // iPod/iPhone\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [\n\n            /(blackberry)[\\s-]?(\\w+)/i,                                         // BlackBerry\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\\s_-]?([\\w-]*)/i,\n                                                                                // BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp)\\s([\\w\\s]+\\w)/i,                                               // HP iPAQ\n            /(asus)-?(\\w+)/i                                                    // Asus\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /\\(bb10;\\s(\\w+)/i                                                   // BlackBerry 10\n            ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [\n                                                                                // Asus Tablets\n            /android.+(transfo[prime\\s]{4,10}\\s\\w+|eeepc|slider\\s\\w+|nexus 7|padfone|p00c)/i\n            ], [MODEL, [VENDOR, 'Asus'], [TYPE, TABLET]], [\n\n            /(sony)\\s(tablet\\s[ps])\\sbuild\\//i,                                  // Sony\n            /(sony)?(?:sgp.+)\\sbuild\\//i\n            ], [[VENDOR, 'Sony'], [MODEL, 'Xperia Tablet'], [TYPE, TABLET]], [\n            /android.+\\s([c-g]\\d{4}|so[-l]\\w+)(?=\\sbuild\\/|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, MOBILE]], [\n\n            /\\s(ouya)\\s/i,                                                      // Ouya\n            /(nintendo)\\s([wids3u]+)/i                                          // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n\n            /android.+;\\s(shield)\\sbuild/i                                      // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n\n            /(playstation\\s[34portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [\n\n            /(sprint\\s(\\w+))/i                                                  // Sprint Phones\n            ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [\n\n            /(htc)[;_\\s-]+([\\w\\s]+(?=\\)|\\sbuild)|\\w+)/i,                        // HTC\n            /(zte)-(\\w*)/i,                                                     // ZTE\n            /(alcatel|geeksphone|nexian|panasonic|(?=;\\s)sony)[_\\s-]?([\\w-]*)/i\n                                                                                // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            /(nexus\\s9)/i                                                       // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n\n            /d\\/huawei([\\w\\s-]+)[;\\)]/i,\n            /(nexus\\s6p)/i                                                      // Huawei\n            ], [MODEL, [VENDOR, 'Huawei'], [TYPE, MOBILE]], [\n\n            /(microsoft);\\s(lumia[\\s\\w]+)/i                                     // Microsoft Lumia\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /[\\s\\(;](xbox(?:\\sone)?)[\\s\\);]/i                                   // Microsoft Xbox\n            ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [\n\n                                                                                // Motorola\n            /\\s(milestone|droid(?:[2-4x]|\\s(?:bionic|x2|pro|razr))?:?(\\s4g)?)[\\w\\s]+build\\//i,\n            /mot[\\s-]?(\\w*)/i,\n            /(XT\\d{3,4}) build\\//i,\n            /(nexus\\s6)/i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [\n            /android.+\\s(mz60\\d|xoom[\\s2]{0,2})\\sbuild\\//i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [\n\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+\\s+\\([\\w\\s]*;\\s*(\\w[^;]*);([^;]*)/i            // HbbTV devices\n            ], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [\n\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, 'Samsung'], [TYPE, SMARTTV]], [\n\n            /\\(dtv[\\);].+(aquos)/i                                              // Sharp\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [\n\n            /android.+((sch-i[89]0\\d|shw-m380s|gt-p\\d{4}|gt-n\\d+|sgh-t8[56]9|nexus 10))/i,\n            /((SM-T\\w+))/i\n            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, TABLET]], [                  // Samsung\n            /smart-tv.+(samsung)/i\n            ], [VENDOR, [TYPE, SMARTTV], MODEL], [\n            /((s[cgp]h-\\w+|gt-\\w+|galaxy\\snexus|sm-\\w[\\w\\d]+))/i,\n            /(sam[sung]*)[\\s-]*(\\w+-?[\\w-]*)/i,\n            /sec-((sgh\\w+))/i\n            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, MOBILE]], [\n\n            /sie-(\\w*)/i                                                        // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n\n            /(maemo|nokia).*(n900|lumia\\s\\d+)/i,                                // Nokia\n            /(nokia)[\\s_-]?([\\w-]*)/i\n            ], [[VENDOR, 'Nokia'], MODEL, [TYPE, MOBILE]], [\n\n            /android[x\\d\\.\\s;]+\\s([ab][1-7]\\-?[0178a]\\d\\d?)/i                   // Acer\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            /android.+([vl]k\\-?\\d{3})\\s+build/i                                 // LG Tablet\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, TABLET]], [\n            /android\\s3\\.[\\s\\w;-]{10}(lg?)-([06cv9]{3,4})/i                     // LG Tablet\n            ], [[VENDOR, 'LG'], MODEL, [TYPE, TABLET]], [\n            /(lg) netcast\\.tv/i                                                 // LG SmartTV\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /(nexus\\s[45])/i,                                                   // LG\n            /lg[e;\\s\\/-]+(\\w*)/i,\n            /android.+lg(\\-?[\\d\\w]+)\\s+build/i\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [\n\n            /(lenovo)\\s?(s(?:5000|6000)(?:[\\w-]+)|tab(?:[\\s\\w]+))/i             // Lenovo tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n            /android.+(ideatab[a-z0-9\\-\\s]+)/i                                  // Lenovo\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n            /(lenovo)[_\\s-]?([\\w-]+)/i\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /linux;.+((jolla));/i                                               // Jolla\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /((pebble))app\\/[\\d\\.]+\\s/i                                         // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n\n            /android.+;\\s(oppo)\\s?([\\w\\s]+)\\sbuild/i                            // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, 'Chromecast'], [VENDOR, 'Google']], [\n\n            /android.+;\\s(glass)\\s\\d/i                                          // Google Glass\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [\n\n            /android.+;\\s(pixel c)[\\s)]/i                                       // Google Pixel C\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, TABLET]], [\n\n            /android.+;\\s(pixel( [23])?( xl)?)[\\s)]/i                              // Google Pixel\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [\n\n            /android.+;\\s(\\w+)\\s+build\\/hm\\1/i,                                 // Xiaomi Hongmi 'numeric' models\n            /android.+(hm[\\s\\-_]*note?[\\s_]*(?:\\d\\w)?)\\s+build/i,               // Xiaomi Hongmi\n            /android.+(mi[\\s\\-_]*(?:a\\d|one|one[\\s_]plus|note lte)?[\\s_]*(?:\\d?\\w?)[\\s_]*(?:plus)?)\\s+build/i,    \n                                                                                // Xiaomi Mi\n            /android.+(redmi[\\s\\-_]*(?:note)?(?:[\\s_]*[\\w\\s]+))\\s+build/i       // Redmi Phones\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [\n            /android.+(mi[\\s\\-_]*(?:pad)(?:[\\s_]*[\\w\\s]+))\\s+build/i            // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [\n            /android.+;\\s(m[1-5]\\snote)\\sbuild/i                                // Meizu\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n            /(mz)-([\\w-]{2,})/i\n            ], [[VENDOR, 'Meizu'], MODEL, [TYPE, MOBILE]], [\n\n            /android.+a000(1)\\s+build/i,                                        // OnePlus\n            /android.+oneplus\\s(a\\d{4})\\s+build/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            /android.+[;\\/]\\s*(RCT[\\d\\w]+)\\s+build/i                            // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n\n            /android.+[;\\/\\s]+(Venue[\\d\\s]{2,7})\\s+build/i                      // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Q[T|M][\\d\\w]+)\\s+build/i                         // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s+(Barnes[&\\s]+Noble\\s+|BN[RT])(V?.*)\\s+build/i     // Barnes & Noble Tablet\n            ], [[VENDOR, 'Barnes & Noble'], MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s+(TM\\d{3}.*\\b)\\s+build/i                           // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n\n            /android.+;\\s(k88)\\sbuild/i                                         // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(gen\\d{3})\\s+build.*49h/i                         // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n\n            /android.+[;\\/]\\s*(zur\\d{3})\\s+build/i                              // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*((Zeki)?TB.*\\b)\\s+build/i                         // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n\n            /(android).+[;\\/]\\s+([YR]\\d{2})\\s+build/i,\n            /android.+[;\\/]\\s+(Dragon[\\-\\s]+Touch\\s+|DT)(\\w{5})\\sbuild/i        // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(NS-?\\w{0,9})\\sbuild/i                            // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*((NX|Next)-?\\w{0,9})\\s+build/i                    // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Xtreme\\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\\s+build/i\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [                    // Voice Xtreme Phones\n\n            /android.+[;\\/]\\s*(LVTEL\\-)?(V1[12])\\s+build/i                     // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n\n            /android.+;\\s(PH-1)\\s/i\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [                // Essential PH-1\n\n            /android.+[;\\/]\\s*(V(100MD|700NA|7011|917G).*\\b)\\s+build/i          // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Le[\\s\\-]+Pan)[\\s\\-]+(\\w{1,9})\\s+build/i          // Le Pan Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Trio[\\s\\-]*.*)\\s+build/i                         // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Trinity)[\\-\\s]*(T\\d{3})\\s+build/i                // Trinity Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*TU_(1491)\\s+build/i                               // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n\n            /android.+(KS(.+))\\s+build/i                                        // Amazon Kindle Tablets\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\n\n            /android.+(Gigaset)[\\s\\-]+(Q\\w{1,9})\\s+build/i                      // Gigaset Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /\\s(tablet|tab)[;\\/]/i,                                             // Unidentifiable Tablet\n            /\\s(mobile)(?:[;\\/]|\\ssafari)/i                                     // Unidentifiable Mobile\n            ], [[TYPE, util.lowerize], VENDOR, MODEL], [\n\n            /[\\s\\/\\(](smart-?tv)[;\\)]/i                                         // SmartTV\n            ], [[TYPE, SMARTTV]], [\n\n            /(android[\\w\\.\\s\\-]{0,9});.+build/i                                 // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+\\sedge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, 'EdgeHTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)/i                                  // Blink\n            ], [[NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,     \n                                                                                // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /(khtml|tasman|links)[\\/\\s]\\(?([\\w\\.]+)/i,                          // KHTML/Tasman/Links\n            /(icab)[\\/\\s]([23]\\.[\\d\\.]+)/i                                      // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9}).+(gecko)/i                                       // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows based\n            /microsoft\\s(windows)\\s(vista|xp)/i                                 // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows)\\snt\\s6\\.2;\\s(arm)/i,                                     // Windows RT\n            /(windows\\sphone(?:\\sos)*)[\\s\\/]?([\\d\\.\\s\\w]*)/i,                   // Windows Phone\n            /(windows\\smobile|windows)[\\s\\/]?([ntce\\d\\.\\s]+\\w)/i\n            ], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [\n            /(win(?=3|9|n)|win\\s9x\\s)([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [\n\n            // Mobile/Embedded OS\n            /\\((bb)(10);/i                                                      // BlackBerry 10\n            ], [[NAME, 'BlackBerry'], VERSION], [\n            /(blackberry)\\w*\\/?([\\w\\.]*)/i,                                     // Blackberry\n            /(tizen)[\\/\\s]([\\w\\.]+)/i,                                          // Tizen\n            /(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|sailfish|contiki)[\\/\\s-]?([\\w\\.]*)/i\n                                                                                // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki/Sailfish OS\n            ], [NAME, VERSION], [\n            /(symbian\\s?os|symbos|s60(?=;))[\\/\\s-]?([\\w\\.]*)/i                  // Symbian\n            ], [[NAME, 'Symbian'], VERSION], [\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME], [\n            /mozilla.+\\(mobile;.+gecko.+firefox/i                               // Firefox OS\n            ], [[NAME, 'Firefox OS'], VERSION], [\n\n            // Console\n            /(nintendo|playstation)\\s([wids34portablevu]+)/i,                   // Nintendo/Playstation\n\n            // GNU/Linux based\n            /(mint)[\\/\\s\\(]?(\\w*)/i,                                            // Mint\n            /(mageia|vectorlinux)[;\\s]/i,                                       // Mageia/VectorLinux\n            /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|(?=\\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\\/\\s-]?(?!chrom)([\\w\\.-]*)/i,\n                                                                                // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware\n                                                                                // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus\n            /(hurd|linux)\\s?([\\w\\.]*)/i,                                        // Hurd/Linux\n            /(gnu)\\s?([\\w\\.]*)/i                                                // GNU\n            ], [NAME, VERSION], [\n\n            /(cros)\\s[\\w]+\\s([\\w\\.]+\\w)/i                                       // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Solaris\n            /(sunos)\\s?([\\w\\.\\d]*)/i                                            // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n\n            // BSD based\n            /\\s([frentopc-]{0,4}bsd|dragonfly)\\s?([\\w\\.]*)/i                    // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly\n            ], [NAME, VERSION],[\n\n            /(haiku)\\s(\\w+)/i                                                   // Haiku\n            ], [NAME, VERSION],[\n\n            /cfnetwork\\/.+darwin/i,\n            /ip[honead]{2,4}(?:.*os\\s([\\w]+)\\slike\\smac|;\\sopera)/i             // iOS\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n\n            /(mac\\sos\\sx)\\s?([\\w\\s\\.]*)/i,\n            /(macintosh|mac(?=_powerpc)\\s)/i                                    // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Other\n            /((?:open)?solaris)[\\/\\s-]?([\\w\\.]*)/i,                             // Solaris\n            /(aix)\\s((\\d)(?=\\.|\\)|\\s)[\\w\\.])*/i,                                // AIX\n            /(plan\\s9|minix|beos|os\\/2|amigaos|morphos|risc\\sos|openvms|fuchsia)/i,\n                                                                                // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS/Fuchsia\n            /(unix)\\s?([\\w\\.]*)/i                                               // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n\n    /////////////////\n    // Constructor\n    ////////////////\n    var UAParser = function (uastring, extensions) {\n\n        if (typeof uastring === 'object') {\n            extensions = uastring;\n            uastring = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(uastring, extensions).getResult();\n        }\n\n        var ua = uastring || ((window && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var rgxmap = extensions ? util.extend(regexes, extensions) : regexes;\n\n        this.getBrowser = function () {\n            var browser = { name: undefined, version: undefined };\n            mapper.rgx.call(browser, ua, rgxmap.browser);\n            browser.major = util.major(browser.version); // deprecated\n            return browser;\n        };\n        this.getCPU = function () {\n            var cpu = { architecture: undefined };\n            mapper.rgx.call(cpu, ua, rgxmap.cpu);\n            return cpu;\n        };\n        this.getDevice = function () {\n            var device = { vendor: undefined, model: undefined, type: undefined };\n            mapper.rgx.call(device, ua, rgxmap.device);\n            return device;\n        };\n        this.getEngine = function () {\n            var engine = { name: undefined, version: undefined };\n            mapper.rgx.call(engine, ua, rgxmap.engine);\n            return engine;\n        };\n        this.getOS = function () {\n            var os = { name: undefined, version: undefined };\n            mapper.rgx.call(os, ua, rgxmap.os);\n            return os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return ua;\n        };\n        this.setUA = function (uastring) {\n            ua = uastring;\n            return this;\n        };\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER = {\n        NAME    : NAME,\n        MAJOR   : MAJOR, // deprecated\n        VERSION : VERSION\n    };\n    UAParser.CPU = {\n        ARCHITECTURE : ARCHITECTURE\n    };\n    UAParser.DEVICE = {\n        MODEL   : MODEL,\n        VENDOR  : VENDOR,\n        TYPE    : TYPE,\n        CONSOLE : CONSOLE,\n        MOBILE  : MOBILE,\n        SMARTTV : SMARTTV,\n        TABLET  : TABLET,\n        WEARABLE: WEARABLE,\n        EMBEDDED: EMBEDDED\n    };\n    UAParser.ENGINE = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n    UAParser.OS = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n\n    ///////////\n    // Export\n    //////////\n\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (true) {\n            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n                return UAParser;\n            }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n        } else if (window) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = window && (window.jQuery || window.Zepto);\n    if (typeof $ !== UNDEF_TYPE && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (uastring) {\n            parser.setUA(uastring);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///98\n");

/***/ }),

/***/ 99:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nconst isProduction = undefined === 'production';\nconst isStaging = undefined === 'staging';\nconst isTest = undefined === 'test';\nmodule.exports = {\n  isProduction,\n  isStaging,\n  isTest\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9lbnZpcm9ubWVudC9pbmRleC5qcz80YWIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyBMaWNlbnNlZCB0byB0aGUgU29mdHdhcmUgRnJlZWRvbSBDb25zZXJ2YW5jeSAoU0ZDKSB1bmRlciBvbmVcbi8vIG9yIG1vcmUgY29udHJpYnV0b3IgbGljZW5zZSBhZ3JlZW1lbnRzLiAgU2VlIHRoZSBOT1RJQ0UgZmlsZVxuLy8gZGlzdHJpYnV0ZWQgd2l0aCB0aGlzIHdvcmsgZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb25cbi8vIHJlZ2FyZGluZyBjb3B5cmlnaHQgb3duZXJzaGlwLiAgVGhlIFNGQyBsaWNlbnNlcyB0aGlzIGZpbGVcbi8vIHRvIHlvdSB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGVcbi8vIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZVxuLy8gd2l0aCB0aGUgTGljZW5zZS4gIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLFxuLy8gc29mdHdhcmUgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW5cbi8vIFwiQVMgSVNcIiBCQVNJUywgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZXG4vLyBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGVcbi8vIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQgbGltaXRhdGlvbnNcbi8vIHVuZGVyIHRoZSBMaWNlbnNlLlxuY29uc3QgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbmNvbnN0IGlzU3RhZ2luZyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnc3RhZ2luZyc7XG5jb25zdCBpc1Rlc3QgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Rlc3QnO1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzUHJvZHVjdGlvbixcbiAgaXNTdGFnaW5nLFxuICBpc1Rlc3Rcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gL21udC9jL3ljL2luc3RhbnRhcGkvc2VsZW5pdW0taWRlL3BhY2thZ2VzL3NpZGUtdXRpbHMvZGlzdC9lbnZpcm9ubWVudC9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gOTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDIgNCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///99\n");

/***/ })

/******/ });
});