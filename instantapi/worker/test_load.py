import replayer
import time
import threading

# use pool = replayer.Pool() normally!
# DummyWorker is just for testing
pool = replayer.Pool()

params = {
    "content": '# Generated by Selenium IDE\nimport pytest\nimport time\nimport json\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.action_chains import ActionChains\nfrom selenium.webdriver.support import expected_conditions\nfrom selenium.webdriver.support.wait import WebDriverWait\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n\nclass TestDefaultSuite():\n  def setup_method(self, method):\n    self.driver = webdriver.Chrome()\n    self.vars = {}\n  \n  def teardown_method(self, method):\n    self.driver.quit()\n  \n  def run(self):\n    self.driver.get("https://www.random.org/integers/?num=1&min=1&max=100000000&col=1&base=10&format=plain&rnd=new")',
    "selectors": ["pre"]
}

for i in range(500):
    time.sleep(5)
    threading.Thread(target=pool.run_job, args=(params,)).start()

def start_callback():
    time.sleep(60)
    while True:
        threading.Thread(target=pool.run_job, args=(params,)).start()
        time.sleep(0.1)

threading.Thread(target=pool.run_job, args=(params, start_callback)).start()
