import replayer
import time
import threading

worker = replayer.Droplet()
params = {
    "content": '# Generated by Selenium IDE\nimport pytest\nimport time\nimport json\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.action_chains import ActionChains\nfrom selenium.webdriver.support import expected_conditions\nfrom selenium.webdriver.support.wait import WebDriverWait\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\n\nclass TestDefaultSuite():\n  def setup_method(self, method):\n    self.driver = webdriver.Chrome()\n    self.vars = {}\n  \n  def teardown_method(self, method):\n    self.driver.quit()\n  \n  def run(self):\n    self.driver.get("https://www.amazon.com/")'
}

print("==== STARTING WORKER FROM SCRATCH - this part should be slow!! ====")

while worker.status != "available":
    print("waiting for worker to be available...")
    time.sleep(5)

results = worker.do_job(params)
print(results)
time.sleep(5)

print("==== NOW REUSING WORKER - this should be way faster!! ====")

while worker.status != "available":
    print("waiting for worker to be available...")
    time.sleep(5)

results = worker.do_job(params)
print(results)

worker.destroy()
